1
00:00:00,200 --> 00:00:02,540
Hey, guys, it's Angela from the App Brewery.

2
00:00:02,540 --> 00:00:08,380
And in this lesson, we're going to deep dive into how exactly does the Internet work?

3
00:00:08,390 --> 00:00:10,970
So what exactly is the Internet?

4
00:00:11,000 --> 00:00:15,440
A lot of people think it's a cloud, something that's hanging around in the sky.

5
00:00:15,440 --> 00:00:20,270
It's super complex, super difficult to understand, but actually that's not it at all.

6
00:00:20,300 --> 00:00:22,760
The Internet is pretty simple.

7
00:00:22,850 --> 00:00:29,510
All it is, is just a long piece of wire and wire connects different computers to each other.

8
00:00:29,510 --> 00:00:35,090
So you might have one computer that's in London and another one that's in Seattle, and they can talk

9
00:00:35,090 --> 00:00:38,450
to each other and transfer data through this giant wire.

10
00:00:38,450 --> 00:00:42,530
Now, some of these computers attach to the Internet, have a very special job.

11
00:00:42,560 --> 00:00:49,040
They have to be online 24 over seven ready to serve you all the data and files that you are requesting

12
00:00:49,040 --> 00:00:51,110
when you try to access a website.

13
00:00:51,260 --> 00:00:54,140
And these are called servers.

14
00:00:54,170 --> 00:01:00,840
And what they do is they serve you all the data and files you need to be able to access and interact

15
00:01:00,840 --> 00:01:02,250
with certain websites.

16
00:01:02,250 --> 00:01:04,800
So these computers are called servers.

17
00:01:04,800 --> 00:01:10,230
And any computer that a user would use to access the Internet is called a client.

18
00:01:10,260 --> 00:01:16,620
Now you can imagine a web server as a giant library that's open 24 over seven, and you can go in there

19
00:01:16,620 --> 00:01:22,350
at any hour of the day and say, I want to see Google's homepage or I want to see the latest posts on

20
00:01:22,350 --> 00:01:27,870
TechCrunch and would be able to serve you with all the files and data you would need to be able to view

21
00:01:27,900 --> 00:01:29,400
whatever website you want.

22
00:01:29,430 --> 00:01:35,070
Now, as you can imagine, if there's a library that's big enough to house all of these websites, then

23
00:01:35,070 --> 00:01:41,400
it's going to be pretty difficult to quickly locate the thing that you want out of this giant library.

24
00:01:41,400 --> 00:01:41,970
Right?

25
00:01:41,970 --> 00:01:44,670
So how is this problem solved on the Internet?

26
00:01:45,120 --> 00:01:50,520
Well, let's say that you're sitting at home on your computer and you type in Google.com because you

27
00:01:50,520 --> 00:01:53,070
want to head over to the main Google home page.

28
00:01:53,160 --> 00:02:01,410
Well, what happens behind the scenes is that your browser will send that message to your ISP or your

29
00:02:01,410 --> 00:02:03,030
Internet service provider.

30
00:02:03,030 --> 00:02:06,630
So these are the people who you pay to be able to access the internet.

31
00:02:06,840 --> 00:02:10,770
If you live in the US, that will be AT&T or Comcast.

32
00:02:10,770 --> 00:02:14,490
And if you're in the UK, there will be something like BT or TalkTalk.

33
00:02:14,520 --> 00:02:21,600
Now the message that you're sending the ISP is I want to see Google.com and the ISP will then relay

34
00:02:21,600 --> 00:02:28,590
that message to something called a DNS server, which stands for a domain name system server.

35
00:02:28,590 --> 00:02:33,180
And a DNS server is essentially just a souped up phone book.

36
00:02:33,180 --> 00:02:39,000
And what happens when you make that request through your browser is the DNS server will look up in its

37
00:02:39,000 --> 00:02:44,910
database to find the exact IP address of that website that you're trying to access.

38
00:02:44,910 --> 00:02:50,160
And every single computer that's connected to the internet has an IP address.

39
00:02:50,190 --> 00:02:55,680
It's kind of like a postal code for your computer so that when people need to send and receive files

40
00:02:55,680 --> 00:03:02,940
on the Internet, each computer can be located and contacted using their unique IP address.

41
00:03:02,940 --> 00:03:09,720
And once the DNS server finds that IP address, it will send it back to your browser through the ISP

42
00:03:09,870 --> 00:03:11,190
over the Internet.

43
00:03:11,220 --> 00:03:15,150
Then you can make a direct request to that address.

44
00:03:15,150 --> 00:03:21,810
And what lives at that IP address is of course the Google servers and they'll be able to send you back

45
00:03:21,810 --> 00:03:27,150
all the files and data you need to be able to view the Google Home page.

46
00:03:27,150 --> 00:03:33,330
Now you can try this for yourself to look up the IP address of the Google Home page, head over to this

47
00:03:33,330 --> 00:03:41,550
website nslookup.io and type in google.com and they should show you the exact IP address of the Google

48
00:03:41,550 --> 00:03:43,470
servers that you can access.

49
00:03:43,500 --> 00:03:49,230
Now, if you try checking this on a different day, say in a week or in a month's time, you might see

50
00:03:49,230 --> 00:03:51,750
that this address actually changes.

51
00:03:51,750 --> 00:03:56,880
And that's because many websites, including Google, use something called dynamic IP addresses, as

52
00:03:56,880 --> 00:03:59,880
well as a content distribution network or a CDN.

53
00:03:59,910 --> 00:04:05,310
This basically ensures that it gets you to the closest server to where you are located.

54
00:04:05,310 --> 00:04:10,950
And also this address will change depending on whether if it's being used or not.

55
00:04:10,950 --> 00:04:13,260
So don't type in what you see on screen.

56
00:04:13,260 --> 00:04:20,160
Instead, head over to nslookup.io and look up what is the closest IP address to you that is currently

57
00:04:20,160 --> 00:04:21,209
being used.

58
00:04:21,300 --> 00:04:27,840
So if you copy it and paste it into a new tab, then you'll be able to replicate that process and see

59
00:04:27,840 --> 00:04:29,490
the Google Home page show up.

60
00:04:29,490 --> 00:04:37,590
So to summarize, the Internet is just a bunch of wires that connects up different computers, but it's

61
00:04:37,590 --> 00:04:42,150
just on a much bigger scale connecting up all the computers in the world.

62
00:04:42,150 --> 00:04:43,710
But what about the oceans?

63
00:04:43,710 --> 00:04:44,810
I hear you ask.

64
00:04:44,820 --> 00:04:47,310
Well, that's one of the coolest things.

65
00:04:47,310 --> 00:04:52,710
There are these massive undersea cables connecting all the continents on earth.

66
00:04:52,710 --> 00:04:59,640
And if you head over to submarine cable map.com, you can see all of these cables and see the ones that

67
00:04:59,640 --> 00:04:59,820
connect.

68
00:05:00,030 --> 00:05:01,480
You up to the Internet.

69
00:05:01,480 --> 00:05:08,140
And these undersea cables are massive, consisting of hundreds of fiber optic fibers, each of them

70
00:05:08,140 --> 00:05:13,030
using lasers to transmit up to 400GB of data per second.

71
00:05:13,060 --> 00:05:16,720
This is a cross-section of one of the cables that run to New Zealand.

72
00:05:16,750 --> 00:05:20,020
It's an absolute marvel of modern technology.

73
00:05:20,020 --> 00:05:22,600
And it looks really beautiful, don't you think?

74
00:05:22,630 --> 00:05:28,360
And to think that every single time we load up a web page or click on a button on a website, behind

75
00:05:28,360 --> 00:05:34,710
the scenes was sending signals that navigate all of this crazy underwater and above water wires.

76
00:05:34,720 --> 00:05:37,630
And all I need is just an IP address.

77
00:05:37,630 --> 00:05:43,030
And through tiny electric signals, traveling at the speed of light through the oceans and halfway around

78
00:05:43,030 --> 00:05:50,080
the world in a matter of milliseconds, I get to view my favorite websites and that is how awesome the

79
00:05:50,080 --> 00:05:51,150
internet is.

80
00:05:51,160 --> 00:05:55,630
And we're going to be taming it to build our own websites and web apps.

81
00:05:55,630 --> 00:06:01,330
And to be able to do that, we first have to understand how exactly do websites work.

82
00:06:01,340 --> 00:06:04,940
So for all of that and more, I'll see you on the next lesson.


83
00:00:00,450 --> 00:00:04,530
Now that we've spoken about how the internet works, in this episode

84
00:00:04,560 --> 00:00:09,240
I want to talk about how exactly do websites work. What exactly does HTML,

85
00:00:09,240 --> 00:00:14,130
CSS and JavaScript do exactly? Now, in order to access a webpage,

86
00:00:14,160 --> 00:00:18,420
we all know that you need a browser, right? And that can be Chrome,

87
00:00:18,480 --> 00:00:21,330
Safari, Firefox, whatever is your favorite one.

88
00:00:21,570 --> 00:00:26,570
These are all pieces of software that allow you to look up the IP address of

89
00:00:27,420 --> 00:00:32,420
your website and be able to receive data that it can render into this beautiful

90
00:00:33,060 --> 00:00:34,950
websites that we see. Now,

91
00:00:35,310 --> 00:00:40,100
the data that you receive from the server usually consists of three types of

92
00:00:40,100 --> 00:00:43,400
files; HTML, CSS, and JavaScript.

93
00:00:43,700 --> 00:00:48,080
And it's very likely that you would have come across these types of files or

94
00:00:48,080 --> 00:00:49,340
these words before,

95
00:00:49,610 --> 00:00:53,930
because they're so common and there are so integral to how websites work.

96
00:00:53,960 --> 00:00:56,150
But, what exactly do they do

97
00:00:56,210 --> 00:00:58,970
and why are there so many different types of files?

98
00:00:59,300 --> 00:01:03,440
Why can't we just have one file that's, you know, a website? Well,

99
00:01:03,710 --> 00:01:05,480
they actually have very different jobs.

100
00:01:05,690 --> 00:01:10,690
The HTML code file is responsible for the structure of your website.

101
00:01:11,030 --> 00:01:12,860
So if a website was a house,

102
00:01:13,130 --> 00:01:18,020
then the HTML would be the builder who would come in to build the walls or put

103
00:01:18,020 --> 00:01:22,670
in a toilet. Basically they establish the structure of your house.

104
00:01:23,000 --> 00:01:27,410
And when you write HTML code, you also build up the structure of your website.

105
00:01:27,620 --> 00:01:32,270
So you could use HTML to add an image or button or text box,

106
00:01:32,540 --> 00:01:35,600
whatever it is that you need in your website. Now,

107
00:01:35,630 --> 00:01:38,150
the second type of file are CSS files,

108
00:01:38,360 --> 00:01:41,840
and these files are responsible for styling your website.

109
00:01:42,530 --> 00:01:46,460
If you were building a house, then this would be the painters and decorators.

110
00:01:46,670 --> 00:01:47,720
They would be going around

111
00:01:47,720 --> 00:01:51,980
painting the walls or adding stylistic flourishes to your place,

112
00:01:52,160 --> 00:01:55,850
and generally making the place look the way that you want it to.

113
00:01:56,210 --> 00:02:00,950
And that's exactly what CSS code does as well. When you incorporate CSS,

114
00:02:01,040 --> 00:02:04,820
it allows you to specify how you want your website to look.

115
00:02:05,060 --> 00:02:09,380
So you could say that, yes, I have a button that I got from my HTML,

116
00:02:09,620 --> 00:02:14,000
but that button I want it to be red and I want the text to be white

117
00:02:14,090 --> 00:02:19,090
and I want the font of the text to be an Arial. That is all done using CSS code.

118
00:02:19,910 --> 00:02:23,420
Now the final component is the JavaScript code.

119
00:02:23,660 --> 00:02:28,430
And this is the code that allows your website to actually do things or have

120
00:02:28,460 --> 00:02:30,890
behavior. And if you were building a house,

121
00:02:30,920 --> 00:02:32,720
you would have the electrician come in,

122
00:02:32,900 --> 00:02:36,860
who would be able to connect the wires so that your light bulbs actually switch

123
00:02:36,860 --> 00:02:40,550
on or somebody who comes in and does the plumbing so that your toilet can

124
00:02:40,550 --> 00:02:44,000
actually flush. And the JavaScript code does exactly that.

125
00:02:44,390 --> 00:02:48,860
It allows your website to actually do things and have behavior.

126
00:02:49,100 --> 00:02:51,920
So if we take the Google website as an example again,

127
00:02:52,100 --> 00:02:54,980
once we receive these files from Google server,

128
00:02:55,130 --> 00:02:58,850
when our browser loads up the HTML files, we'll get to see the structure

129
00:02:59,500 --> 00:03:03,160
of the website, namely, there's one image which has their logo,

130
00:03:03,400 --> 00:03:08,200
there's two buttons, and there's a text box where we can enter our search. Now,

131
00:03:08,200 --> 00:03:10,240
when we receive the CSS files,

132
00:03:10,630 --> 00:03:14,770
then that will modify the appearance of all of those components.

133
00:03:15,010 --> 00:03:18,580
We don't have any more buttons or any more images,

134
00:03:18,790 --> 00:03:23,410
but the now look the way that Google wanted it to. And finally,

135
00:03:23,680 --> 00:03:25,900
when we incorporate the JavaScript files,

136
00:03:26,140 --> 00:03:31,090
then our website actually starts having behavior. It has functionality

137
00:03:31,330 --> 00:03:35,650
and it's actually able to do something rather than just display some images and

138
00:03:35,650 --> 00:03:39,490
texts to us. Now, with the knowledge that we've already acquired,

139
00:03:39,610 --> 00:03:43,150
we can already start messing around with websites on the internet.

140
00:03:43,600 --> 00:03:46,510
So open up Chrome and head over to techcrunch.com.

141
00:03:46,780 --> 00:03:48,340
And if you're not familiar with it,

142
00:03:48,430 --> 00:03:52,390
it's basically a technology news website where I get my latest tech news.

143
00:03:52,780 --> 00:03:53,920
Once you're over here,

144
00:03:54,130 --> 00:03:59,130
I want you to right-click on the title here and click on inspect.

145
00:04:01,660 --> 00:04:04,210
Now this brings up the Chrome developer tools,

146
00:04:04,570 --> 00:04:07,930
and we're going to be exploring this in a lot more detail,

147
00:04:08,290 --> 00:04:11,860
but for now we're going to use it to do something really simple.

148
00:04:12,070 --> 00:04:15,970
You can see that when I right-click on that heading and click inspect,

149
00:04:16,209 --> 00:04:21,209
it automatically opens up the entire code file that was used to render this

150
00:04:21,760 --> 00:04:25,900
website. So these are all of the elements that make up this website.

151
00:04:26,320 --> 00:04:28,420
And when you click on inspect,

152
00:04:28,780 --> 00:04:33,700
it will highlight to you the part of the code that corresponds to the thing that

153
00:04:33,700 --> 00:04:36,700
you right clicked, right? In this case, it's this title.

154
00:04:37,390 --> 00:04:40,840
And inside this title, you can see that there is a link,

155
00:04:41,230 --> 00:04:44,350
which means that when you click on it, it'll go to another web page,

156
00:04:44,710 --> 00:04:49,510
but it also got a bit of text. So right inside Chrome developer tools,

157
00:04:49,660 --> 00:04:53,620
if you double click on the bit of text that corresponds to the title,

158
00:04:53,950 --> 00:04:55,180
you can actually edit it.

159
00:04:56,110 --> 00:04:59,800
So let's go ahead and change the front page of TechCrunch.

160
00:04:59,890 --> 00:05:01,030
Let's say something like,

161
00:05:02,040 --> 00:05:02,873
uhm..

162
00:05:04,500 --> 00:05:07,410
So this is a great way of pranking your friends,

163
00:05:07,560 --> 00:05:12,540
especially when they can see that you're on tech crunch.com and the title or any

164
00:05:12,540 --> 00:05:15,810
of the texts on the website is what you want it to say.

165
00:05:15,990 --> 00:05:19,470
And this is a great joke to play on friends who are maybe not quite as

166
00:05:19,470 --> 00:05:21,120
technologically advanced as you,

167
00:05:21,300 --> 00:05:24,810
because they haven't taken the course that you have. Now unfortunately,

168
00:05:24,840 --> 00:05:29,580
when I hit refresh on this website, all of my good work is gone.

169
00:05:29,910 --> 00:05:34,910
And the reason is because when I'm editing it here inside my browser,

170
00:05:35,730 --> 00:05:40,730
I'm actually changing the local copy of this file that I got back from the

171
00:05:41,430 --> 00:05:44,340
server. But when I click refresh,

172
00:05:44,430 --> 00:05:49,320
then that makes a new request to the servers to load up a fresh copy of the

173
00:05:49,320 --> 00:05:53,400
website. So of course, then it updates to the original content.

174
00:05:53,640 --> 00:05:57,530
But in the coming lessons, we're going to be working with HTML, CSS,

175
00:05:57,740 --> 00:06:02,150
and JavaScript so that you can create and host live on the internet,

176
00:06:02,360 --> 00:06:06,770
your very own websites and through learning how to code and how to build

177
00:06:06,770 --> 00:06:07,580
websites

178
00:06:07,580 --> 00:06:11,270
you are going to be able to make websites that say anything that you want it to,

179
00:06:11,540 --> 00:06:15,520
look the way that you want it to, and have the functionality that you need.

180
00:06:15,940 --> 00:06:19,210
So for all of that and more, I'll see you in the next lesson.


181
00:00:00,560 --> 00:00:09,110
Now let's get started by learning a little bit more about what exactly is it and how do we use it to

182
00:00:09,110 --> 00:00:10,340
create websites.

183
00:00:10,370 --> 00:00:18,050
Now, no matter what browser you like to use, Chrome or Safari or Brave, even all of these applications

184
00:00:18,050 --> 00:00:19,230
do the same thing.

185
00:00:19,250 --> 00:00:27,110
They take different files such as HTML, CSS and JavaScript, and they render them into a website.

186
00:00:27,260 --> 00:00:34,100
But even though most modern websites are created using these three different file types combined together,

187
00:00:34,100 --> 00:00:39,540
you can't create a website with just a CSS file or just a JavaScript file.

188
00:00:39,560 --> 00:00:43,490
However, you can have just an HTML file.

189
00:00:43,490 --> 00:00:48,800
And in fact, that's exactly what the first websites were created with HTML.

190
00:00:48,830 --> 00:00:53,390
Now HTML defines the content and structure of the website.

191
00:00:53,390 --> 00:01:00,960
So for example, in this case, all that my HTML file does is it it renders a heading that says my website.

192
00:01:00,990 --> 00:01:08,640
And when this file is opened by the browser, it will display that heading saying my website.

193
00:01:08,730 --> 00:01:11,490
Now what exactly is HTML?

194
00:01:11,520 --> 00:01:12,690
Let's break it down.

195
00:01:12,690 --> 00:01:16,950
So HTML stands for hypertext markup language.

196
00:01:16,980 --> 00:01:20,940
If we look at the first part, hypertext, what does that mean?

197
00:01:21,420 --> 00:01:28,600
Well, it refers to the pieces of text which can link to other documents in the website.

198
00:01:28,620 --> 00:01:37,830
So these pieces of text are hypertext or hyperlinks, and they are the foundation of how an HTML website

199
00:01:37,830 --> 00:01:38,580
works.

200
00:01:38,610 --> 00:01:46,560
Now, if we take a look at the World First website created by Sir Tim Berners-Lee, who also happens

201
00:01:46,560 --> 00:01:52,040
to be the inventor of the Internet, then you can see it's filled with these hyperlinks marked in blue

202
00:01:52,050 --> 00:01:54,600
and exactly as you would expect.

203
00:01:54,600 --> 00:02:01,710
If you click on any of these hyperlinks, it takes you to another document, another HTML file.

204
00:02:01,740 --> 00:02:06,600
So if we go back, you can see that we were on projecting HTML.

205
00:02:06,600 --> 00:02:14,880
And if I click on one of the hyperlinks like how can I help, it will take me to another HTML file and

206
00:02:14,880 --> 00:02:16,650
this is how hypertext works.

207
00:02:16,650 --> 00:02:22,260
And there's even a link on this website explaining exactly what hypertext is.

208
00:02:22,290 --> 00:02:28,080
So now that we know what hypertext is, what about the other part, the markup language?

209
00:02:28,080 --> 00:02:29,910
What is a markup language?

210
00:02:30,300 --> 00:02:36,870
Now, if you look at the English language, we often see little bits that function very similar to markup,

211
00:02:36,960 --> 00:02:38,970
like these double quotes.

212
00:02:39,000 --> 00:02:45,690
The presence of these quotation marks is what tells a reader that this part is a quotation.

213
00:02:45,690 --> 00:02:54,480
And as you'll find, this is going to be really similar to what you see in the editor's review of manuscript.

214
00:02:54,480 --> 00:03:01,830
So used to mark them up and show different things, such as, for example, which parts need to be bold

215
00:03:01,850 --> 00:03:09,830
by adding a squiggly line underneath it and which parts need to be underlined by adding a straight line

216
00:03:09,830 --> 00:03:10,490
through it.

217
00:03:11,060 --> 00:03:15,230
So how do you do markup with HTML?

218
00:03:15,260 --> 00:03:19,670
Well, it's done through what's called HTML tags.

219
00:03:19,700 --> 00:03:25,040
Now, in the early days of the Internet, there were only very few HTML tags.

220
00:03:25,160 --> 00:03:31,310
These days there are loads more, but realistically, you're only going to be using some of the most

221
00:03:31,310 --> 00:03:38,700
important ones such as headings H1 through to H6 or the paragraph tag the P tag.

222
00:03:38,720 --> 00:03:44,570
So here you can see all of the HTML tags, but when we narrow it down to the ones that you actually

223
00:03:44,570 --> 00:03:47,810
need to know, then it makes it a lot more approachable.

224
00:03:47,930 --> 00:03:52,610
And in the rest of the course we're going to be covering some of the most essential tags.

225
00:03:52,610 --> 00:03:55,400
And so don't worry about learning them.

226
00:03:55,400 --> 00:03:58,950
So don't worry about memorizing all of them or learning them.

227
00:03:58,970 --> 00:04:03,690
We're going to cover them as we need them in our projects and in our exercises.

228
00:04:03,870 --> 00:04:11,610
So in the next lesson, we're going to get started by learning about the heading tag, one of the most

229
00:04:11,640 --> 00:04:14,940
OG HTML tags that ever existed.

230
00:04:14,940 --> 00:04:18,360
So for all of that and more, I'll see you on the next lesson.


231
00:00:00,200 --> 00:00:07,130
Now, in the previous lesson, we took a look at what is and in this lesson I want to get us started

232
00:00:07,130 --> 00:00:13,640
using HTML as quickly as possible so we can learn how to write our own code and start creating websites

233
00:00:13,640 --> 00:00:14,240
with it.

234
00:00:14,270 --> 00:00:19,400
Now, in this lesson, we're going to be learning about one of the most important elements, the heading

235
00:00:19,400 --> 00:00:20,060
element.

236
00:00:20,060 --> 00:00:23,320
And this is what a heading element looks like.

237
00:00:23,330 --> 00:00:31,460
It starts off with what's called an opening tag here, and it ends with what's called a closing tag.

238
00:00:31,460 --> 00:00:37,610
Now, if you look closely, the opening and the closing tag actually have one thing that's different,

239
00:00:37,610 --> 00:00:40,520
and it's this forward slash right here.

240
00:00:40,700 --> 00:00:44,240
And that is what makes this a closing tag.

241
00:00:44,450 --> 00:00:52,100
And what goes in between these two tags is the content of that particular HTML element.

242
00:00:52,100 --> 00:00:58,820
So in this case, what we're saying we want to do is we want to create a H1 heading and what the heading

243
00:00:58,820 --> 00:01:03,200
is going to contain is these words Hello world.

244
00:01:03,620 --> 00:01:10,670
Now, very often when you hear me talking about HTML, you'll hear me refer to tags and elements and

245
00:01:10,670 --> 00:01:13,490
you'll see this on the Internet and everywhere else as well.

246
00:01:13,730 --> 00:01:16,550
So what exactly is the difference?

247
00:01:16,850 --> 00:01:20,360
Well, the tag refers to these bits.

248
00:01:20,360 --> 00:01:21,530
These are tags.

249
00:01:21,530 --> 00:01:27,530
Anything that's inside an angle bracket we call these angle brackets is a tag.

250
00:01:27,530 --> 00:01:28,910
And they have different names.

251
00:01:28,910 --> 00:01:32,180
So as I mentioned, this one is the opening tag.

252
00:01:33,210 --> 00:01:37,950
And this one at the end is, of course, called the closing tag.

253
00:01:38,520 --> 00:01:40,920
Now, these are the tags.

254
00:01:40,920 --> 00:01:42,630
So what's an element?

255
00:01:42,660 --> 00:01:52,260
Well, the entire thing here, this is an element that includes the content as well as any opening or

256
00:01:52,260 --> 00:01:53,420
closing tags.

257
00:01:53,430 --> 00:01:56,160
This is the HTML element.

258
00:01:56,160 --> 00:01:59,550
And these parts are the tags.

259
00:02:00,120 --> 00:02:05,520
So hopefully that'll make things a little bit clearer the next time you hear about tags and elements.

260
00:02:06,210 --> 00:02:09,750
What is the purpose of these heading elements?

261
00:02:09,750 --> 00:02:12,930
Well, the idea comes from book binding.

262
00:02:12,930 --> 00:02:18,810
If you create a book and you create a table of contents like this one, you'll see that there's a sort

263
00:02:18,810 --> 00:02:20,250
of hierarchy, right?

264
00:02:20,280 --> 00:02:23,670
You've got the top level headings here.

265
00:02:23,760 --> 00:02:31,530
This would probably be a level one heading and these would be a level two heading because they refer

266
00:02:31,530 --> 00:02:37,180
to something that's more or less related to this approval section.

267
00:02:37,300 --> 00:02:45,490
And you can see inside section eight here, there's even another subsection 8.1, which goes into more

268
00:02:45,490 --> 00:02:48,280
detail about some aspect of eight.

269
00:02:48,310 --> 00:02:52,300
This in our case might be an H three heading.

270
00:02:52,330 --> 00:02:58,270
These levels are what we get to define using our HTML headings.

271
00:02:59,350 --> 00:03:07,540
This is what the code would look like for all six level of headings and remember that there is no heading

272
00:03:07,540 --> 00:03:08,290
seven.

273
00:03:08,320 --> 00:03:15,430
There is no such thing as an H seven that does not exist once you've gone to heading six.

274
00:03:15,430 --> 00:03:23,410
That's pretty much the end as defined by the people and anything that's lower in importance, you would

275
00:03:23,410 --> 00:03:27,940
start using a different type of tag, which will go into a little bit later on.

276
00:03:27,940 --> 00:03:33,610
But for everything from one through to six, the structure is pretty much the same.

277
00:03:33,610 --> 00:03:39,490
You've got an open tag, which is H one or H six, and you've got a closing tag that has the corresponding

278
00:03:39,490 --> 00:03:40,140
number.

279
00:03:40,150 --> 00:03:47,140
Now if you create a tag like this with an H one and then you end with a different one like an H six,

280
00:03:47,170 --> 00:03:49,210
then that's not going to work either.

281
00:03:49,210 --> 00:03:51,850
Just remember that when you're writing your own code.

282
00:03:51,880 --> 00:03:54,070
Now, what does this look like?

283
00:03:54,070 --> 00:03:57,400
If we were to run this code, this is what we would get.

284
00:03:57,430 --> 00:04:04,870
We would get different heading levels and by default, they would be styled to have different sizes.

285
00:04:04,870 --> 00:04:09,310
So heading one being the biggest and heading six being the smallest.

286
00:04:09,490 --> 00:04:15,340
We can of course further style this later on, but as soon as we type these headings, it just gives

287
00:04:15,340 --> 00:04:21,820
us an indication of our levels to make sure that we've written all our code as intended.

288
00:04:21,820 --> 00:04:26,950
And this essentially follows that structure we saw earlier on with the table of contents.

289
00:04:26,950 --> 00:04:32,320
The level one headings are the biggest and the level six headings are the smallest.

290
00:04:32,990 --> 00:04:39,200
So now that we've seen a little bit about how all of this works, let's try an exercise where we create

291
00:04:39,200 --> 00:04:40,990
our own heading elements.

292
00:04:41,000 --> 00:04:48,440
To download the starting files, you have to go over to the course resources for this lesson and click

293
00:04:48,440 --> 00:04:53,060
on the 2.1 heading element file in order to download it.

294
00:04:53,060 --> 00:04:58,310
Now, if you don't know where that is, then you might have missed where at the very beginning of the

295
00:04:58,310 --> 00:05:05,030
course there's a lesson called how to download the course resources and in there I show you exactly

296
00:05:05,030 --> 00:05:08,930
how to download each of the course resources for every single lesson.

297
00:05:08,930 --> 00:05:14,060
So if you miss that, be sure to head over there to take a look and see how you can do this.

298
00:05:14,810 --> 00:05:21,910
Now, once you've downloaded this file, it's really important that you extract it or what we call unzipping.

299
00:05:21,920 --> 00:05:28,250
Now, the first thing I want you to do is to create a folder for all of your web development projects,

300
00:05:28,250 --> 00:05:35,130
and you can create that folder anywhere you like on your desktop in your C drive, in your username

301
00:05:35,130 --> 00:05:40,560
section, wherever you want, but just call it web development projects like this.

302
00:05:41,130 --> 00:05:47,520
Now, once you've created that folder, then I want you to go ahead and open up the zip file that you

303
00:05:47,520 --> 00:05:50,400
just downloaded by double clicking on it.

304
00:05:50,490 --> 00:05:57,450
And once you've opened up that zip file, I want you to drag it into your Web development projects folder

305
00:05:57,600 --> 00:05:58,890
like this.

306
00:05:59,760 --> 00:06:03,150
And then you'll be able to access them right here.

307
00:06:03,450 --> 00:06:07,170
Now, the next step is we're going to open it up in VS code.

308
00:06:08,510 --> 00:06:13,310
Inside vs code, go to file and we're going to create a new window.

309
00:06:13,340 --> 00:06:16,160
Now open up the explorer here.

310
00:06:16,160 --> 00:06:22,000
And then when we're here, we're going to open up our web development projects folder that we just created,

311
00:06:22,010 --> 00:06:26,480
and you should be able to see that folder heading element.

312
00:06:26,750 --> 00:06:32,510
Now, if for some reason this is not working for you, especially if you're on Windows, this might

313
00:06:32,510 --> 00:06:36,100
be because you haven't actually extracted this folder properly.

314
00:06:36,110 --> 00:06:41,120
So again, make sure that you double click on the zip file or on Windows.

315
00:06:41,120 --> 00:06:44,510
You can also right click on it and click extract.

316
00:06:44,510 --> 00:06:50,900
And then once you've done that, drag, that folder that's been extracted into your web development

317
00:06:50,900 --> 00:06:56,000
projects folder and open up that folder inside your VS code.

318
00:06:56,390 --> 00:07:02,390
When you're here, you can see that there are three files in this folder called 2.1 heading Element

319
00:07:02,420 --> 00:07:04,880
one is the index.html.

320
00:07:04,910 --> 00:07:10,290
This is where you're going to be writing your code and I've got some starting code for you which we're

321
00:07:10,290 --> 00:07:13,770
going to need to modify in order to complete this challenge.

322
00:07:13,800 --> 00:07:20,220
Now you've also got the solution, which I don't recommend looking at until you've completed the challenge,

323
00:07:20,220 --> 00:07:23,790
just to check your code or see if there's any differences.

324
00:07:23,790 --> 00:07:29,430
Now notice how I've added a little bit here so that you don't accidentally see it unless you wanted

325
00:07:29,430 --> 00:07:29,970
to.

326
00:07:29,970 --> 00:07:34,110
But if you want to see the solution, just scroll down and you'll see it down there.

327
00:07:34,320 --> 00:07:43,560
The goal of this exercise is to make the code here, create a website that looks like this.

328
00:07:43,740 --> 00:07:48,780
Remember previously when we did our setup and download for VS Code, I showed you how to install the

329
00:07:48,780 --> 00:07:50,580
extension live preview.

330
00:07:50,580 --> 00:07:55,770
If you don't see live preview when you click on extensions, that might mean that you've missed out

331
00:07:55,770 --> 00:07:57,360
on some parts of that video.

332
00:07:57,360 --> 00:08:03,690
So please go back to the setup and download videos for VS Code because there's some other things that

333
00:08:03,690 --> 00:08:05,100
I need you to set up as well.

334
00:08:05,130 --> 00:08:10,020
Make sure you don't skip any of these lessons unless you know exactly what you're doing and you're really

335
00:08:10,020 --> 00:08:11,400
familiar with everything.

336
00:08:11,580 --> 00:08:18,690
What that live preview allows us to do is to go into our code file index.html, right click on it and

337
00:08:18,690 --> 00:08:20,160
click show preview.

338
00:08:20,160 --> 00:08:26,190
So it should now open up another pane and you can see it shows us our book chapters, Section one,

339
00:08:26,190 --> 00:08:31,800
Chapter one, chapter two, chapter three sections and Diagrams and Subsections.

340
00:08:31,920 --> 00:08:38,010
Unfortunately, everything seems to be just on one long line, and if you drag it out, you can see

341
00:08:38,010 --> 00:08:39,330
it's just one long line.

342
00:08:39,330 --> 00:08:44,400
There's no formatting at all and there's no indication about hierarchy.

343
00:08:44,400 --> 00:08:46,860
So that's where the challenge comes in.

344
00:08:46,890 --> 00:08:54,660
You're going to use what you learned about heading elements in order to format this code here in the

345
00:08:54,660 --> 00:08:59,820
index.html so that we end up with something that looks like this.

346
00:08:59,820 --> 00:09:05,700
So we want the preview to show us heading one elements heading two elements heading three elements.

347
00:09:05,700 --> 00:09:09,330
And this one this diagram one is actually a heading four element.

348
00:09:09,330 --> 00:09:14,370
So you should have H one through to H four in your code here.

349
00:09:14,370 --> 00:09:21,030
So now is the time to pause me in the video and try to complete this challenge.

350
00:09:21,030 --> 00:09:26,970
And after you're done then you can resume the video and we'll walk through the solution together, pause

351
00:09:26,970 --> 00:09:28,890
the video now and give it a go.

352
00:09:32,320 --> 00:09:32,770
All right.

353
00:09:32,770 --> 00:09:40,480
So we're going to have a single h one element up here, which is going to be for this word book.

354
00:09:40,510 --> 00:09:48,250
So we're going to put an H one element right here, and we're going to drag our book, which is the

355
00:09:48,250 --> 00:09:48,820
content.

356
00:09:48,820 --> 00:09:54,700
Remember, in between these two tags, that's how our heading tags are formatted.

357
00:09:54,790 --> 00:10:00,910
Now, the next one are these Chapter one, chapter two, chapter three sections, and they're all going

358
00:10:00,910 --> 00:10:05,500
to be the next level of hierarchy, which is an H two.

359
00:10:05,530 --> 00:10:08,290
So let's do that for all three of them.

360
00:10:16,830 --> 00:10:23,070
And then we can move on to our H three, which is going to be the sections within the chapters.

361
00:10:23,220 --> 00:10:27,690
And now I'm just going to fast forward through the rest of the code so that you don't get bored.

362
00:10:29,000 --> 00:10:35,930
And then finally, this diagram, which belongs inside section one in chapter two, is going to be the

363
00:10:35,930 --> 00:10:40,860
final and the lowest level of hierarchy, which is an H four.

364
00:10:40,880 --> 00:10:47,120
And once we've completed all of this code, you can check yourself against the solution code and you

365
00:10:47,120 --> 00:10:49,400
should see it's pretty much the same.

366
00:10:51,020 --> 00:11:00,320
Now, one of the things that you'll find is when you hit save using command S or using file save, you'll

367
00:11:00,320 --> 00:11:05,810
see that IT auto formats our code so that we lose any of the indentation.

368
00:11:05,840 --> 00:11:09,470
Don't worry if this happens to you, it's perfectly normal.

369
00:11:09,590 --> 00:11:13,670
And if we check ourselves against the solution, you can see they match.

370
00:11:13,700 --> 00:11:14,600
Exactly.

371
00:11:14,600 --> 00:11:20,840
And we end up with the same result as the goal image, which is what we were aiming for.

372
00:11:21,470 --> 00:11:22,960
How did you manage that?

373
00:11:22,970 --> 00:11:23,750
Don't worry.

374
00:11:23,750 --> 00:11:30,170
If you got things wrong, this is where it's safe to go wrong and try things because we're just learning

375
00:11:30,170 --> 00:11:32,600
there's no tests and there's nobody watching you.

376
00:11:32,630 --> 00:11:35,420
All that matters is you're actually learning stuff.

377
00:11:35,420 --> 00:11:36,890
That's what's important.

378
00:11:36,920 --> 00:11:38,590
Have a play around with the code.

379
00:11:38,600 --> 00:11:42,260
Don't worry, if you do anything wrong, there's always a solution.

380
00:11:42,260 --> 00:11:44,240
And me here to help you.

381
00:11:44,900 --> 00:11:49,880
There's a couple of things to note in terms of do's and don'ts when it comes to heading elements that

382
00:11:49,880 --> 00:11:51,390
I want to talk to you about.

383
00:11:51,420 --> 00:11:56,990
One important rule is notice how in our exercise there was only one H1.

384
00:11:57,000 --> 00:12:05,280
It's not good practice to have more than one H1 because the H1 is the very top level heading.

385
00:12:05,310 --> 00:12:11,340
Imagine the H1 as the book title and the table of contents as including the other parts.

386
00:12:11,340 --> 00:12:14,520
So maybe the H2 would be the first chapter.

387
00:12:15,150 --> 00:12:17,580
Don't have more than one H1.

388
00:12:17,580 --> 00:12:26,400
Instead, if you need another subtitle or another level of heading, then go to the H2 or H3 or all

389
00:12:26,400 --> 00:12:29,430
of the other ones up until H6.

390
00:12:30,180 --> 00:12:34,710
Now the other thing to watch out for is don't skip a level.

391
00:12:34,710 --> 00:12:40,440
When you're creating heading elements, don't go straight from H1 to H3.

392
00:12:40,470 --> 00:12:46,170
If you have an H3, there should also be an H2 somewhere on that web page.

393
00:12:46,230 --> 00:12:52,650
Instead, I recommend to just go in order when you have an H1 that you've created and then you realize

394
00:12:52,650 --> 00:12:55,650
you need another heading, then go to an H2.

395
00:12:55,650 --> 00:13:01,620
And then if you need another level of heading that's even lower in priority, go to an H3.

396
00:13:01,650 --> 00:13:04,680
Don't jump between the different level headings.

397
00:13:04,890 --> 00:13:07,710
These are not things that will break your code.

398
00:13:07,710 --> 00:13:11,190
Your website will still look fine even if you break all of these rules.

399
00:13:11,190 --> 00:13:13,140
But they're just rules for convention.

400
00:13:13,140 --> 00:13:17,880
And because we're going to be professionals, we're going to start off on the right foot and learn all

401
00:13:17,880 --> 00:13:19,740
the rules that we need to know.

402
00:13:20,270 --> 00:13:27,350
Now, if you wanted to read up even more on the heading elements, then I recommend going to the professional

403
00:13:27,380 --> 00:13:34,610
tool, which is our Mozilla developer network web docs, and they have documentation for all of the

404
00:13:34,760 --> 00:13:36,950
HTML elements that exist.

405
00:13:36,950 --> 00:13:43,070
And when you read up on each of these pages, they tell you more details about things that you need

406
00:13:43,070 --> 00:13:47,630
to know, and they show you some interactive examples of how it all works.

407
00:13:47,870 --> 00:13:53,750
Now, I don't recommend reading through all of these for all of the HTML elements, but I do recommend

408
00:13:53,750 --> 00:13:59,420
that if you're going to use a new element that you haven't seen before and you don't know how it works,

409
00:13:59,420 --> 00:14:04,700
you haven't had a lecture on it, then I recommend just taking a quick look at the docs and seeing some

410
00:14:04,700 --> 00:14:09,920
examples about how they're used in a similar way that I've shown you in the lectures.

411
00:14:10,640 --> 00:14:15,800
Now that we've learned about one of the most important HTML elements, the heading elements, in the

412
00:14:15,800 --> 00:14:21,960
next lesson, we're going to move on to another super important element which is the paragraph element.

413
00:14:21,960 --> 00:14:24,450
So for all of that and more, I'll see you there.


414
00:00:00,170 --> 00:00:05,330
So now that you've seen what you can do with the HTML heading element, the next one we're going to

415
00:00:05,330 --> 00:00:07,880
learn about is the paragraph element.

416
00:00:07,880 --> 00:00:13,490
And this is also related to formatting and putting text on our websites.

417
00:00:14,000 --> 00:00:22,070
This is what a paragraph element looks like and similar to the heading element, you've got the opening

418
00:00:22,100 --> 00:00:31,670
tag and the closing tag, and in between you've got the content that is going to be your paragraph.

419
00:00:32,000 --> 00:00:39,710
Now the reason why we need a paragraph tag is because if you just had plain text in your HTML document,

420
00:00:39,740 --> 00:00:46,720
when you run the code and you see it on a website, what you'll see is something like this.

421
00:00:46,730 --> 00:00:53,870
The text, they run into each other onto the same line and you can't actually tell where one paragraph

422
00:00:53,870 --> 00:00:56,060
begins and where the other ends.

423
00:00:56,510 --> 00:01:03,630
On the other hand, if we had created two paragraph elements for these two lines, then when we run

424
00:01:03,630 --> 00:01:10,890
the code you will see them being separated with a line in between to be able to distinguish the different

425
00:01:10,890 --> 00:01:12,060
paragraphs.

426
00:01:12,630 --> 00:01:18,930
And this is also really important for people who are using screen readers, so people who might be blind,

427
00:01:18,960 --> 00:01:26,010
because what the screen reader will do is they'll see the beginning of each paragraph element and it

428
00:01:26,010 --> 00:01:33,480
allows the blind user to be able to skip to the next paragraph easily and be able to see what's going

429
00:01:33,480 --> 00:01:34,770
on each time.

430
00:01:35,340 --> 00:01:41,460
Now let's put those skills into practice by trying an exercise using the paragraph element.

431
00:01:41,730 --> 00:01:47,130
If you head over to the course resources for this lesson, you should be able to download the zip file

432
00:01:47,130 --> 00:01:50,100
for the 2.2 paragraph element.

433
00:01:50,100 --> 00:01:56,040
And once you've extracted and unzipped it, then go ahead and put it into your web development projects

434
00:01:56,040 --> 00:01:59,520
folder and then open it up inside vs code.

435
00:01:59,550 --> 00:02:06,150
I showed you how to do all of this in the previous lesson in HTML heading element as well as the initial

436
00:02:06,150 --> 00:02:11,910
lesson when I showed you how to download course resources, so be sure to check those places if you

437
00:02:11,910 --> 00:02:14,850
don't know how to get hold of this folder.

438
00:02:15,060 --> 00:02:20,970
But once you have it opened up like this, then I want you to go ahead and open up the index.html file,

439
00:02:20,970 --> 00:02:24,690
which as always, is where we're going to write our code.

440
00:02:24,930 --> 00:02:32,070
Notice here we've got three paragraphs, the first paragraph, the second paragraph and the third paragraph.

441
00:02:32,070 --> 00:02:36,240
And then there's some placeholder text in Latin, which doesn't mean anything.

442
00:02:36,240 --> 00:02:42,180
It just is there so that you can see what a paragraph of text would look like.

443
00:02:42,180 --> 00:02:49,860
And when you go ahead and right click and show preview, you should see that all of the paragraphs are

444
00:02:49,860 --> 00:02:58,050
jumbled together into one long line and we can't tell where one paragraph begins and the other one ends.

445
00:02:58,050 --> 00:03:05,490
So now it is your mission to solve this problem using what you've learned about the paragraph element.

446
00:03:05,490 --> 00:03:12,960
So go ahead and format these three paragraphs using the paragraph tag and once you're done, you should

447
00:03:12,960 --> 00:03:14,250
see the preview.

448
00:03:14,280 --> 00:03:22,560
Show something like this where each paragraph is separated into new lines and clearly visually, we're

449
00:03:22,560 --> 00:03:28,650
able to see the difference and we're able to distinguish these three different paragraphs.

450
00:03:28,980 --> 00:03:32,880
Pause the video now, and once you're done, we'll go through the solution together.

451
00:03:36,890 --> 00:03:37,280
All right.

452
00:03:37,280 --> 00:03:39,800
We're going to use our paragraph tag.

453
00:03:39,800 --> 00:03:46,970
So we're going to put the open tag here just in front of our first paragraph, and then we're going

454
00:03:46,970 --> 00:03:53,510
to put the closing tag at the very end of our first paragraph, and then we're going to repeat that

455
00:03:53,510 --> 00:03:56,810
basically for all of the other paragraphs.

456
00:03:59,490 --> 00:04:03,390
Now you can see here I'm just clicking and dragging.

457
00:04:03,510 --> 00:04:11,370
Alternatively, you can cut it and then paste it at the very end of the paragraph.

458
00:04:11,400 --> 00:04:16,950
It really doesn't matter how you do it, as long as you get those tags in the right places.

459
00:04:16,950 --> 00:04:24,250
And now hopefully your preview should have updated and you can see these paragraphs forming as we type.

460
00:04:24,270 --> 00:04:27,660
So this looks pretty much the same as our goal.

461
00:04:27,660 --> 00:04:35,760
And if you check the solution HTML, you should see the tags in the correct places as well.

462
00:04:35,880 --> 00:04:42,780
So hopefully that wasn't too hard and you were able to do it all by yourself and you've seen now what

463
00:04:42,780 --> 00:04:51,870
is the benefit of using a paragraph element to separate text into different paragraphs of content?

464
00:04:52,140 --> 00:04:59,260
Now, what you saw in the exercise are bits of placeholder text, and it's what we would refer to as

465
00:04:59,260 --> 00:05:00,310
Lorem ipsum.

466
00:05:00,340 --> 00:05:04,240
It's something that you'll come across quite a lot, especially in web design.

467
00:05:04,240 --> 00:05:11,110
It's so that we don't end up with something like this where we're trying to simulate content in a paragraph,

468
00:05:11,110 --> 00:05:15,310
but then we're just writing content, content, content, or this is a paragraph, this is a paragraph,

469
00:05:15,310 --> 00:05:16,180
this is a paragraph.

470
00:05:16,180 --> 00:05:20,500
And the reason why we don't want to do this is because these are all the same words.

471
00:05:20,530 --> 00:05:22,240
The sentence has the same length.

472
00:05:22,240 --> 00:05:27,640
It doesn't look like what a natural block of text would look like, and we don't have the time or energy

473
00:05:27,640 --> 00:05:31,660
to actually create the content just for testing and web design.

474
00:05:31,660 --> 00:05:35,140
So that's why we use something called Lorem Ipsum.

475
00:05:35,590 --> 00:05:44,320
And Lorem ipsum apparently comes from Latin classical literature by a famous author called Cicero.

476
00:05:44,350 --> 00:05:51,160
If you've heard of him and it's over 2000 years old and this has been in use in the print industry for

477
00:05:51,160 --> 00:05:57,700
many, many years, ever since the 1500s, even, where people started laying out newspapers and when

478
00:05:57,700 --> 00:06:01,780
they didn't have the content for the layout, they would use this placeholder text.

479
00:06:01,810 --> 00:06:09,640
If you want to get hold of them, you can go over to Simcom and there you'll find Lorem ipsum even in

480
00:06:09,640 --> 00:06:17,050
different languages like Dutch or Polish, and you can use this tool to generate as many paragraphs

481
00:06:17,050 --> 00:06:24,160
or words or bytes or lists as you need by simply using this generate button.

482
00:06:24,160 --> 00:06:29,130
And here I've got five paragraphs ready to go to put into my new web design.

483
00:06:29,140 --> 00:06:35,290
Now, instead of having something that looks like this where everything's all the same length, instead

484
00:06:35,290 --> 00:06:42,310
we have very natural looking paragraphs that mimic pretty much what a regular English article would

485
00:06:42,310 --> 00:06:43,150
look like.

486
00:06:43,150 --> 00:06:47,230
And this is done in a matter of seconds using Lorem ipsum.

487
00:06:47,560 --> 00:06:53,410
Now if Lorem ipsum is a little bit too boring for you, there's actually some novelty versions of this.

488
00:06:53,440 --> 00:06:59,650
One of my favorite is bacon ipsum.com and it will generate similar to Lorem ipsum, but then you'll

489
00:06:59,650 --> 00:07:05,710
get words like bacon and flank and pork loin and pork belly.

490
00:07:05,740 --> 00:07:11,950
Now if you're not a meat eater, then maybe you should try something like bro ipsum.com where you can

491
00:07:11,950 --> 00:07:18,550
have all of the bro terminology in a Lorem ipsum format.

492
00:07:18,580 --> 00:07:35,110
And apparently the things that bros say are things like Taco pow and washboard and rail and heli paopao,

493
00:07:35,200 --> 00:07:36,670
whatever it may be.

494
00:07:36,670 --> 00:07:42,370
And if none of these take your fancy, then I recommend going on to Google and you can actually find

495
00:07:42,370 --> 00:07:46,270
more of these kind of things by just searching for funny Lorem ipsum.

496
00:07:46,270 --> 00:07:52,780
And there's a whole bunch of different ones like vegan ipsum or pirate ipsum and you'll come across

497
00:07:52,780 --> 00:07:56,170
all sorts of different placeholder text generators.

498
00:07:56,170 --> 00:08:02,290
But the important thing is you know how to get hold of them and you can use it in your code.

499
00:08:02,290 --> 00:08:10,300
So as an add on challenge, if you want to, you can generate your own version of Lorem ipsum or Bacon

500
00:08:10,300 --> 00:08:18,880
ipsum or bro ipsum and you can create an article using the paragraph tag and the Lorem ipsum that you've

501
00:08:18,880 --> 00:08:20,200
generated.

502
00:08:20,500 --> 00:08:26,500
Feel free to modify the index.html in the coding exercise that we just completed.

503
00:08:26,980 --> 00:08:32,260
So have a play around with that and be sure to comment in the Q&A sections below.

504
00:08:32,260 --> 00:08:39,400
If you find some Lorem ipsum that you think is ridiculous or really funny or really cool and I'll see

505
00:08:39,400 --> 00:08:40,929
you on the next lesson.


506
00:00:00,680 --> 00:00:01,040
All right.

507
00:00:01,040 --> 00:00:08,690
So in this lesson, we're going to learn all about the void elements such as the horizontal rule and

508
00:00:08,690 --> 00:00:09,770
the break element.

509
00:00:10,130 --> 00:00:12,420
What exactly are void elements?

510
00:00:12,440 --> 00:00:19,700
Well, we've seen what non void elements are, such as the paragraph element or the heading elements,

511
00:00:19,700 --> 00:00:25,070
and they're not void because they have content right here in between.

512
00:00:25,490 --> 00:00:33,340
A void element is an element where you are forbidden from putting any content inside the tag.

513
00:00:33,350 --> 00:00:37,160
And in fact the tag itself even looks very different.

514
00:00:37,160 --> 00:00:43,490
So this is a horizontal rule element and you can see that it starts out with an angle, bracket ends

515
00:00:43,490 --> 00:00:44,660
with an angle bracket.

516
00:00:44,660 --> 00:00:51,320
But then right here, there is this forward slash just before the end of the tag.

517
00:00:51,410 --> 00:00:58,520
You might think this looks a bit like the closing tag of a normal HTML element, but it's actually subtly

518
00:00:58,520 --> 00:01:07,500
different because here in the closing tag, that forward slash is just after the opening angle bracket.

519
00:01:07,500 --> 00:01:10,680
It's right here in front of the letter.

520
00:01:10,710 --> 00:01:17,760
Whereas in the void elements, the forward slash is actually just before the end of the tag.

521
00:01:17,850 --> 00:01:23,910
And normally by convention, you'll see a little space here as well between the tag name and also that

522
00:01:23,910 --> 00:01:25,170
forward slash.

523
00:01:25,710 --> 00:01:28,740
This is just something to be really careful about.

524
00:01:28,740 --> 00:01:31,560
When you're creating these void elements.

525
00:01:31,560 --> 00:01:38,400
Make sure that you've got the forward slash slashing in the right direction so this way and not a backslash

526
00:01:38,400 --> 00:01:39,150
like this.

527
00:01:39,150 --> 00:01:47,700
So when it points to the right, then it's a forward slash and when it points backwards, then it's

528
00:01:47,700 --> 00:01:49,020
a backslash.

529
00:01:49,770 --> 00:01:55,020
So what does this look like when we add it to a HTML document?

530
00:01:55,050 --> 00:02:02,250
Well, here we've got our previous two paragraphs and right in between the two paragraphs I've added

531
00:02:02,250 --> 00:02:10,860
a horizontal rule which will hopefully help us divide the content to show that this part is not related

532
00:02:10,860 --> 00:02:11,670
to this part.

533
00:02:11,670 --> 00:02:18,840
And we've got some sort of separation in between when we run this code or when we view it in a web browser,

534
00:02:18,840 --> 00:02:20,130
this is what you would see.

535
00:02:20,160 --> 00:02:25,560
You would see the first paragraph, the second paragraph, and then you would see this horizontal rule

536
00:02:25,560 --> 00:02:31,920
or basically a horizontal line where the air element would be in that document.

537
00:02:32,130 --> 00:02:35,970
Now the horizontal rule is not the only void element.

538
00:02:36,000 --> 00:02:38,910
Another common one you'll see is the break element.

539
00:02:38,910 --> 00:02:40,650
And it looks like this.

540
00:02:40,680 --> 00:02:47,670
Now, similarly, again, we've got the name of the tag and then we've got that forward slash and then

541
00:02:47,670 --> 00:02:50,190
we basically end the tag.

542
00:02:50,190 --> 00:02:51,810
So there is no opening tag.

543
00:02:51,810 --> 00:02:53,040
There is no closing tag.

544
00:02:53,040 --> 00:02:56,580
There is only a single tag that looks like this.

545
00:02:56,580 --> 00:03:01,650
And the name of the tag goes right before the forward slash.

546
00:03:01,770 --> 00:03:04,800
Now, how does the break element work?

547
00:03:05,280 --> 00:03:11,220
Well, it's really useful when you have things where you need to separate things onto separate lines

548
00:03:11,220 --> 00:03:13,440
in order to have the correct meaning.

549
00:03:13,470 --> 00:03:21,240
For example, if you have poems, they are in fact meant to be in the same paragraph, but they should

550
00:03:21,240 --> 00:03:27,900
really each be on different lines in order to make the rhyming work or in order to make the structure

551
00:03:27,900 --> 00:03:29,370
of the poem correct.

552
00:03:29,400 --> 00:03:34,350
So this is a poem from one of my favorite poets, William Blake.

553
00:03:34,350 --> 00:03:42,840
And in order for it to work, we can't have it all run in one line, even if it's in the same paragraph.

554
00:03:42,930 --> 00:03:49,980
If we had this code right here, even though yes, it is all in the same paragraph, it is all related

555
00:03:49,980 --> 00:03:52,920
to each other and this does make sense.

556
00:03:52,920 --> 00:03:54,960
But you don't look at poetry like this.

557
00:03:54,960 --> 00:03:56,250
It doesn't really work.

558
00:03:56,250 --> 00:04:00,270
We don't know where we're supposed to breathe and how we're supposed to read out the poem.

559
00:04:00,270 --> 00:04:04,350
So instead we can add our break elements that we just learned about.

560
00:04:04,590 --> 00:04:11,820
Our void element doesn't have any content in it, but it just shows where the breaks in this paragraph

561
00:04:11,820 --> 00:04:14,880
has to go in order for this poem to look right.

562
00:04:14,880 --> 00:04:19,110
And when this HTML document is rendered, this is what you'll see.

563
00:04:19,140 --> 00:04:21,410
A perfect layout for a poem.

564
00:04:21,420 --> 00:04:25,230
The World in a grain of sand and heaven in a war flower.

565
00:04:25,260 --> 00:04:29,970
Hold infinity in the palm of your hand and eternity in an hour.

566
00:04:30,390 --> 00:04:39,060
And it's all beautifully formatted thanks to each of our break elements at the end of each line.

567
00:04:39,540 --> 00:04:45,120
So now it's your turn to try an exercise using these void elements.

568
00:04:45,120 --> 00:04:53,160
So go ahead and download the starting files for this exercise from the course resources for this lesson.

569
00:04:53,700 --> 00:04:59,610
And when you've extracted it and open it up, this is what you should see in the index.

570
00:05:00,960 --> 00:05:07,170
We've got the name of our poet William Blake, and this is apparently his real address that he lived

571
00:05:07,170 --> 00:05:08,900
at at some point in life.

572
00:05:08,910 --> 00:05:14,160
And then we've got two paragraphs from Wikipedia which briefly describes the poet.

573
00:05:14,160 --> 00:05:20,790
And I want you to use everything you've learned so far in order to format this document so that it will

574
00:05:20,790 --> 00:05:24,480
look like the goal that I've got right here for you.

575
00:05:24,600 --> 00:05:31,200
As you can see, this top level, the name of our poet is going to be rendered as an H one, because

576
00:05:31,200 --> 00:05:35,450
that is the most important thing about this particular web page.

577
00:05:35,460 --> 00:05:40,800
And then we've got the address of the poet, which is rendered as a paragraph.

578
00:05:40,800 --> 00:05:47,520
But notice that addresses, even though they are a single paragraph, they again need to be broken up

579
00:05:47,520 --> 00:05:50,670
into separate lines using our break element.

580
00:05:50,670 --> 00:05:58,380
And then finally, we've got a horizontal rule that separates the address and the name of the author

581
00:05:58,380 --> 00:06:04,960
from the little bit of description of this author, which should sit in two separate paragraphs.

582
00:06:04,990 --> 00:06:12,720
Now I want you to pause the video and edit the index.html so you end up with this goal PNG.

583
00:06:13,000 --> 00:06:19,930
When you preview this website instead of this jumbled block of text that we have at the moment.

584
00:06:20,650 --> 00:06:24,430
Pause the video now and give this challenge a go.

585
00:06:26,080 --> 00:06:26,620
All right.

586
00:06:26,620 --> 00:06:31,060
So hopefully you've given it a go and everything worked out.

587
00:06:31,720 --> 00:06:33,850
I'm going to run through the solution.

588
00:06:33,850 --> 00:06:41,200
So first we said we were going to have an H one for his name, and then we're going to have a paragraph

589
00:06:41,200 --> 00:06:44,390
tag that encloses the address.

590
00:06:44,410 --> 00:06:52,240
Now, in order to have that address on different lines, we're going to add our break element to the

591
00:06:52,240 --> 00:06:53,860
end of each line.

592
00:06:53,860 --> 00:06:57,730
And remember, our break element is a self-closing tag.

593
00:06:57,730 --> 00:07:02,110
So we're going to create it like like so.

594
00:07:02,350 --> 00:07:09,340
Now I'm going to go ahead and simply copy and paste it to the end of each line and you can see how nicely

595
00:07:09,340 --> 00:07:11,710
our address is now formatted.

596
00:07:11,710 --> 00:07:19,240
And finally, we wanted these two paragraphs at the end to be separated.

597
00:07:19,240 --> 00:07:22,750
So I'm going to go ahead and simply do that.

598
00:07:22,870 --> 00:07:26,890
And now we are pretty much golden.

599
00:07:28,840 --> 00:07:31,960
We've achieved our goal output.

600
00:07:31,990 --> 00:07:38,380
We've got our H1, our address separated, and the only thing we need to do is to add that horizontal

601
00:07:38,380 --> 00:07:42,340
rule between the address and the two paragraphs.

602
00:07:42,370 --> 00:07:46,690
Let's go ahead and add the other void element that we learned about.

603
00:07:46,690 --> 00:07:52,960
And now we've completed the challenge and you can check yourself against the solution to make sure that

604
00:07:52,960 --> 00:07:56,530
everything that you did looks exactly the same.

605
00:07:56,680 --> 00:08:03,940
Now, a neat trick I like to use is to simply copy the solution and go to diff checker.com paste in

606
00:08:03,940 --> 00:08:05,470
the solution code.

607
00:08:06,620 --> 00:08:12,710
And then paste your code and then go ahead and click find difference.

608
00:08:12,770 --> 00:08:18,320
And it should highlight all the places that are different in case you've misspelled something or you've

609
00:08:18,320 --> 00:08:19,370
done something wrong.

610
00:08:19,370 --> 00:08:26,360
So for example, in this case, in our version, there is a space after the word Blake and the closing

611
00:08:26,390 --> 00:08:30,830
tag, which in terms of HTML will not make any difference.

612
00:08:30,980 --> 00:08:41,030
But had I instead maybe written the H1 incorrectly and I didn't write the H for the closing tag, then

613
00:08:41,030 --> 00:08:45,560
you can see our output looks completely different and we're looking through all of this text.

614
00:08:45,560 --> 00:08:51,590
We don't know why it's happened, so we go ahead and copy it and then diff it to the solution.

615
00:08:51,590 --> 00:09:00,770
And it should highlight the fact that that is incorrect and we should now be alerted to check the difference.

616
00:09:01,070 --> 00:09:04,490
That's one tip that I have for you today.

617
00:09:04,940 --> 00:09:13,800
And let me just go back to our index.html fix this bug and we should now be ready to go.

618
00:09:14,690 --> 00:09:22,340
Now in terms of do's and don'ts with void elements, sometimes you see people doing is they add a break

619
00:09:22,370 --> 00:09:28,010
tag to add a new line instead of creating a separate paragraph element.

620
00:09:28,040 --> 00:09:34,040
Now, this is not what you want to do because this is not very good for accessibility, which means

621
00:09:34,040 --> 00:09:40,630
it'll make it harder for blind users with screen readers to understand the content on your website.

622
00:09:40,640 --> 00:09:47,570
So I recommend you always create new paragraph elements when you have new paragraphs and use the break

623
00:09:47,570 --> 00:09:54,110
element only when there is some sort of reason why you would want to separate the different lines in

624
00:09:54,110 --> 00:09:55,220
a single paragraph.

625
00:09:55,220 --> 00:10:01,580
But it still is a single paragraph such as in the case of a poem or in the case of an address that we

626
00:10:01,610 --> 00:10:03,140
covered in this lesson.

627
00:10:03,830 --> 00:10:11,120
Now, the final thing to mention is that sometimes when you look at the horizontal rule element or the

628
00:10:11,120 --> 00:10:14,340
break element, you might see it represented.

629
00:10:14,340 --> 00:10:21,240
Without this final closing tag, you might see people simply write this and this is perfectly valid

630
00:10:21,450 --> 00:10:21,950
HTML.

631
00:10:21,960 --> 00:10:26,940
So you could in fact have a horizontal rule that looks like this.

632
00:10:26,970 --> 00:10:34,620
You could have a break element that looks like this instead of the one with the forward slash at the

633
00:10:34,620 --> 00:10:35,190
end.

634
00:10:35,190 --> 00:10:38,370
And these are both valid options.

635
00:10:38,370 --> 00:10:44,670
You could go for this or you could go for this as of HTML5, the latest version of HTML.

636
00:10:44,700 --> 00:10:50,490
What it's starting to do is it's starting to ignore this forward slash at the end so it doesn't even

637
00:10:50,490 --> 00:10:51,120
look at it.

638
00:10:51,120 --> 00:10:57,330
It sees the first part and already knows that a break is a void element and a horizontal rule is a void

639
00:10:57,330 --> 00:10:57,900
element.

640
00:10:57,900 --> 00:11:00,300
So it doesn't actually need to keep reading.

641
00:11:00,420 --> 00:11:06,150
But I recommend to write your code with this end forward slash.

642
00:11:06,150 --> 00:11:11,820
And the reason is because when you read your code, you as the human, it will be much easier for you

643
00:11:11,820 --> 00:11:19,590
to see that this is a void element and it doesn't need a closing tag so that you don't end up being

644
00:11:19,590 --> 00:11:26,370
confused and you can identify the void elements and the non void elements easily and distinguish them

645
00:11:26,370 --> 00:11:27,240
from each other.

646
00:11:27,240 --> 00:11:34,260
So that's just a quick tip and something to alert you to when you see it written like this on the internet.

647
00:11:34,260 --> 00:11:35,850
Both versions are valid.

648
00:11:35,850 --> 00:11:39,720
You can pick and choose, but I recommend going with this version.


649
00:00:00,200 --> 00:00:07,310
So now that we've gotten a introduction to HTML, I want you to put everything you've learned together

650
00:00:07,310 --> 00:00:10,630
in order to create a new project.

651
00:00:10,640 --> 00:00:15,530
So the project that we're going to be building today is called The Favorite Movie Project.

652
00:00:15,530 --> 00:00:22,910
It's going to be a website to keep track of all of your favorite movies that you've watched When you

653
00:00:22,910 --> 00:00:28,580
go to Roger Ebert.com, he is one of the greatest film critics of all time.

654
00:00:28,580 --> 00:00:34,460
In fact, he's passed away now, but he's got movie reviews and ratings for all the movies that he's

655
00:00:34,460 --> 00:00:35,120
watched.

656
00:00:35,120 --> 00:00:37,850
And you can see that when you go to his website.

657
00:00:38,150 --> 00:00:41,960
I think this is a really great way of keeping track of what you've watched.

658
00:00:41,960 --> 00:00:47,450
Because when friends ask me for recommendations, I can never remember what it is that I've watched

659
00:00:47,450 --> 00:00:50,970
in this year that I really like and what to recommend.

660
00:00:50,990 --> 00:00:54,890
So what we're going to be building today is a very simple website.

661
00:00:54,890 --> 00:01:02,580
It's going to be a website that tracks your favorite movies maybe of all time, maybe of the last year,

662
00:01:02,580 --> 00:01:03,810
whatever you want to do.

663
00:01:03,810 --> 00:01:08,940
And the requirement is you should have at least three movies that you put in here.

664
00:01:09,150 --> 00:01:17,640
So what you're going to need is to create a H1 as the title of the website, and then you're going to

665
00:01:17,640 --> 00:01:26,910
have an H2 as the subtitle, and then you're going to have a horizontal rule as your void element in

666
00:01:26,940 --> 00:01:27,530
there.

667
00:01:27,540 --> 00:01:33,360
And then you're going to have three movies that you're going to list and they're all going to be created

668
00:01:33,360 --> 00:01:36,240
using the H3 element.

669
00:01:36,240 --> 00:01:44,010
And then finally you should have a section which is going to be a paragraph element that's going to

670
00:01:44,010 --> 00:01:47,190
describe why you liked those movies.

671
00:01:47,190 --> 00:01:51,690
And this is basically a very simple format for this website.

672
00:01:51,720 --> 00:01:58,710
Now feel free once you've done all of this to continue to mod this website, to change it up, to add

673
00:01:58,710 --> 00:02:01,620
things, to add break elements, whatever it is you want to do.

674
00:02:01,620 --> 00:02:06,930
But at the minimum, I want to see all of these elements represented on a page.

675
00:02:06,930 --> 00:02:10,350
And of course, feel free to add your own movies.

676
00:02:10,350 --> 00:02:17,070
And I would love to see in the Q and A a picture of your website to see what it is that are your top

677
00:02:17,070 --> 00:02:17,640
movies.

678
00:02:17,640 --> 00:02:19,440
And maybe I'll get some inspiration.

679
00:02:19,440 --> 00:02:23,010
So the next time when I have movie night and I can't figure out what to watch.

680
00:02:23,160 --> 00:02:26,550
So I'm curious to see your recommendations as well.

681
00:02:26,730 --> 00:02:34,950
So go ahead and download the movie ranking project ZIP file from this lesson's course resources.

682
00:02:34,950 --> 00:02:40,170
If you don't know how to do that again, go back to one of the first videos in the course at the very

683
00:02:40,170 --> 00:02:46,170
beginning of Section one where I showed you in a video how to download course resources.

684
00:02:46,290 --> 00:02:53,490
And once you've unzipped it and extracted it, then open it up in vs code and go ahead and code to your

685
00:02:53,490 --> 00:02:56,040
heart's content using everything you've learned.

686
00:02:56,220 --> 00:02:58,680
Pause the video now and give that a go.

687
00:03:02,510 --> 00:03:05,270
Now let's go through the solution.

688
00:03:05,270 --> 00:03:10,040
In my case, I'm going to have an H one at the top, which is going to be the title.

689
00:03:10,040 --> 00:03:18,440
So, um, top movies of all time, according to Angela.

690
00:03:19,190 --> 00:03:28,580
And then afterwards, I'm going to create a subtitle which I will write my best three movies.

691
00:03:29,870 --> 00:03:36,110
And then after that we were going to add a horizontal rule to separate this part from the actual content

692
00:03:36,110 --> 00:03:37,220
of our website.

693
00:03:37,220 --> 00:03:42,530
And I'm going to create an H three to represent each of the movies I'm going to recommend.

694
00:03:42,530 --> 00:03:49,430
So I'm going to recommend A Spirited Away, which is one of my favorite animes.

695
00:03:50,390 --> 00:03:55,790
And I'm going to use a paragraph tag to describe a little bit about why I like it.

696
00:03:55,790 --> 00:03:58,370
So I'm just going to call it favorite anime.

697
00:03:59,360 --> 00:04:05,520
And then the next movie we will be Ex Machina.

698
00:04:06,600 --> 00:04:11,940
And I really liked it because it's a really cool sci fi movie.

699
00:04:13,120 --> 00:04:24,520
And then finally, the third one is going to be the movie Drive with Ryan Gosling because it was really

700
00:04:24,520 --> 00:04:26,080
beautifully shot.

701
00:04:29,150 --> 00:04:29,910
Cool.

702
00:04:29,930 --> 00:04:37,520
This is the basics of what you would need to have done for this project.

703
00:04:37,520 --> 00:04:45,890
It has all of the elements that were required and you can see in the goal PNG that it's got all the

704
00:04:45,890 --> 00:04:49,160
things that we've described, even if the text is a little bit different.

705
00:04:49,190 --> 00:04:53,510
Of course it won't be, according to Angela for you, it will be according to your name.

706
00:04:53,510 --> 00:04:59,600
And now that you've done that, feel free to add different things in here as you would want.

707
00:04:59,630 --> 00:05:07,640
Maybe add a bit more to the paragraph tags, maybe add a poem about your favorite movie, go crazy,

708
00:05:07,670 --> 00:05:14,300
try out things and share in the Q&A your project as a screenshot.

709
00:05:14,660 --> 00:05:19,070
If you don't know how to do a screenshot, be sure to be sure to type that into Google.

710
00:05:19,070 --> 00:05:20,660
How do I create a screenshot?

711
00:05:20,660 --> 00:05:27,110
And then you can add it into the Q&A and we can all look at your favorite movies and be inspired.

712
00:05:27,110 --> 00:05:30,930
So I hope you enjoyed building the project together.

713
00:05:30,930 --> 00:05:39,060
And in the next section we're going to dive a little bit deeper into some more intermediate aspects

714
00:05:39,060 --> 00:05:40,320
of HTML.

715
00:05:40,320 --> 00:05:43,350
So for all of that and more, I'll see you there.


