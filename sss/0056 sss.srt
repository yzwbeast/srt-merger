1
00:00:00,090 --> 00:00:00,840
Hey guys,

2
00:00:00,840 --> 00:00:05,840
and welcome to day 56 of 100 Days of Code. It's Angela here

3
00:00:05,970 --> 00:00:10,970
and today we are diving deeper into web development with Flask.

4
00:00:12,390 --> 00:00:14,070
We're going to be covering a bunch of things,

5
00:00:14,160 --> 00:00:17,610
including how to include static files on your website

6
00:00:17,940 --> 00:00:20,910
like local images or local videos,

7
00:00:21,360 --> 00:00:26,250
as well as how to render HTML and CSS files. Previously,

8
00:00:26,310 --> 00:00:28,350
when we looked into web design

9
00:00:28,650 --> 00:00:32,189
and we learned about creating websites using HTML and CSS,

10
00:00:32,490 --> 00:00:37,350
we were able to create it as a separate file with the proper structure and

11
00:00:37,350 --> 00:00:38,220
styling.

12
00:00:38,580 --> 00:00:43,410
And we want to apply that now to our Flask applications.

13
00:00:43,980 --> 00:00:46,710
And we want to be able to show the user

14
00:00:46,800 --> 00:00:49,620
a HTML website with CSS styling.

15
00:00:50,490 --> 00:00:52,470
Now at the very end of today

16
00:00:52,500 --> 00:00:57,500
we're going to be building out a beautiful personal name card application.

17
00:00:58,470 --> 00:01:03,090
It's the 21st century and we no longer have to hand people name cards.

18
00:01:03,420 --> 00:01:05,190
Instead, you could create a website,

19
00:01:05,400 --> 00:01:09,660
put your name on it and have all the links to the relevant pages that you

20
00:01:09,660 --> 00:01:12,120
need and to show off your beautiful design

21
00:01:12,210 --> 00:01:16,620
as well as give people your contact details. That's the goal for today.

22
00:01:16,740 --> 00:01:19,200
Head over to the next lesson and let's get started.


23
00:00:00,390 --> 00:00:04,650
Now, the first thing I want to show you is how to render HTML files.

24
00:00:05,400 --> 00:00:10,140
Go ahead and create a new PyCharm project. I've called mine my-personal-site,

25
00:00:10,470 --> 00:00:14,580
but you can call yours anything you like. And in the project,

26
00:00:14,610 --> 00:00:19,290
we're going to create a new file which is going to be our Python server.

27
00:00:19,410 --> 00:00:24,410
So I'll call it server.py. And then inside our server.py

28
00:00:24,840 --> 00:00:29,730
we're going to go through all the stages of building up a simple Flask server.

29
00:00:30,390 --> 00:00:34,140
This might be a good time to revise how to do that. So go ahead,

30
00:00:34,200 --> 00:00:38,400
pause the video and see if you can set up a simple Flask application

31
00:00:38,670 --> 00:00:41,670
which just serves up hello world to the homepage.

32
00:00:44,430 --> 00:00:46,110
All right. So let's start from the beginning.

33
00:00:46,380 --> 00:00:51,300
We'll import the Flask class from the flask application.

34
00:00:51,630 --> 00:00:56,400
And as usual, I'm going to use my red light bulb to install the Flask package.

35
00:00:57,120 --> 00:00:58,230
Now, once I've done that,

36
00:00:58,260 --> 00:01:03,260
I'm going to create my Flask application by saying app = Flask.

37
00:01:03,780 --> 00:01:08,670
And then inside the initialization for my Flask application,

38
00:01:08,700 --> 00:01:12,630
I'm going to put in the name of my current directory.

39
00:01:13,920 --> 00:01:14,400
Next,

40
00:01:14,400 --> 00:01:19,400
we're going to use the route decorator to target the home route.

41
00:01:20,850 --> 00:01:23,190
And when the user hits up the home route,

42
00:01:23,460 --> 00:01:25,890
we're going to render the home page.

43
00:01:26,580 --> 00:01:28,920
So inside this definition,

44
00:01:28,950 --> 00:01:33,870
we're simply just going to return hello world. And finally,

45
00:01:33,900 --> 00:01:38,900
we're ready to go ahead and check to see if the name is equal to main, then in

46
00:01:42,720 --> 00:01:46,980
that case we're going to run our app. That's it.

47
00:01:47,040 --> 00:01:48,300
That's all there is to it.

48
00:01:49,110 --> 00:01:52,260
Let's go ahead and run this application

49
00:01:52,290 --> 00:01:57,270
which is our server.py. And if we head over to this URL,

50
00:01:57,570 --> 00:02:00,870
we can see hello world when we go to our homepage.

51
00:02:02,010 --> 00:02:07,010
The next step is to figure out how can we render an HTML webpage

52
00:02:08,400 --> 00:02:13,400
which is crafted inside an HTML file rather than simply just returning strings

53
00:02:14,460 --> 00:02:16,860
or small bits of HTML elements.

54
00:02:17,760 --> 00:02:22,760
Let's go into our file and go ahead and create a new HTML file.

55
00:02:24,120 --> 00:02:24,390
Now,

56
00:02:24,390 --> 00:02:28,500
the reason why we creating it like this is because it's going to add in all of

57
00:02:28,500 --> 00:02:32,250
the boilerplate code that is required to an HTML website.

58
00:02:32,880 --> 00:02:36,870
So let's go ahead and call our web page index.html.

59
00:02:37,410 --> 00:02:41,040
And you can see as soon as I create it, it's added in the doctype,

60
00:02:41,040 --> 00:02:43,980
it's added in the HTML, the head and the body. Now,

61
00:02:44,010 --> 00:02:45,690
if this is unfamiliar to you,

62
00:02:46,140 --> 00:02:51,000
be sure to check out the lessons where we covered HTML and CSS in detail.

63
00:02:51,210 --> 00:02:54,210
But I'm going to assume that all of this is pretty straightforward by now.

64
00:02:55,110 --> 00:02:59,650
Now the first thing we're going to change in our new website is the title.

65
00:03:00,160 --> 00:03:03,370
So I'm going to go ahead and give this a title.

66
00:03:03,880 --> 00:03:08,830
You can put anything you want, but I'm just going to put my own name here. Now,

67
00:03:08,860 --> 00:03:10,150
inside the body,

68
00:03:10,210 --> 00:03:15,210
I'm going to create a h1 and you can see that the HTML files on PyCharm has that

69
00:03:17,200 --> 00:03:20,800
tag completion that we see here. In my h1

70
00:03:20,830 --> 00:03:25,180
I'm just going to write I'm Angela. Pretty straightforward.

71
00:03:25,510 --> 00:03:29,350
This is a complete HTML file now. Now,

72
00:03:29,380 --> 00:03:34,060
if I want to render this instead of just hello world, how would I do that?

73
00:03:35,020 --> 00:03:38,650
Well, how do we find out? As always it's through

74
00:03:38,680 --> 00:03:43,000
the documentation. In the documentation of the quickstart for Flask 

75
00:03:43,090 --> 00:03:45,370
there's a section on rendering templates.

76
00:03:46,000 --> 00:03:50,290
And this allows us to render an HTML file as a template.

77
00:03:51,190 --> 00:03:54,580
There's a couple of requirements though. Tthe first thing is that

78
00:03:54,940 --> 00:03:58,690
remember that Flask is a framework and not a library.

79
00:03:59,110 --> 00:04:04,110
So it will put certain restrictions and requirements on your code so that it

80
00:04:04,240 --> 00:04:08,110
will actually work. And in this case, our HTML files,

81
00:04:08,140 --> 00:04:12,610
which is known as our templates, must be inside a folder called templates.

82
00:04:12,940 --> 00:04:16,180
That's where Flask is gonna look for it when we try to render it.

83
00:04:16,660 --> 00:04:20,950
So let's first do that. Let's create a new directory

84
00:04:21,279 --> 00:04:24,130
which we'll call templates, all lower case,

85
00:04:24,610 --> 00:04:28,420
and let's move our index.html into that new folder.

86
00:04:29,590 --> 00:04:34,590
So there is. The next thing we have to do is we have to import this method called

87
00:04:35,830 --> 00:04:38,410
render_template from the Flask module.

88
00:04:38,890 --> 00:04:41,050
So let's go back to our server.py

89
00:04:41,230 --> 00:04:45,010
and in addition to importing the Flask class,

90
00:04:45,280 --> 00:04:49,570
let's go ahead and import the render_template method as well.

91
00:04:50,470 --> 00:04:52,750
The next thing we have to do is to,

92
00:04:52,780 --> 00:04:57,490
instead of returning a string or a string that contains HTML,

93
00:04:57,760 --> 00:05:02,760
we have to call this method render_template and pass in the file name that we

94
00:05:03,760 --> 00:05:08,050
have and then that is going to be rendered into our website.

95
00:05:08,650 --> 00:05:12,010
So let's go ahead and do this. Let's delete that hello world

96
00:05:12,310 --> 00:05:16,750
and instead, let's return the output from this render_template method.

97
00:05:17,470 --> 00:05:21,520
And inside here, we're going to put the name of our HTML file

98
00:05:21,760 --> 00:05:24,460
which lives inside our templates folder.

99
00:05:25,150 --> 00:05:29,380
That's going to be index.html because that's what we called it.

100
00:05:30,340 --> 00:05:33,610
Now let's go ahead and run our code. Alternatively,

101
00:05:33,610 --> 00:05:38,440
let's switch on the debug mode so that it will refresh and rerun our

102
00:05:38,440 --> 00:05:42,490
server every time we make a change. So let's rerun

103
00:05:42,550 --> 00:05:44,950
and now let's go to our website,

104
00:05:45,370 --> 00:05:50,370
refresh the main page and you can see it's now got an h1 in here and in the

105
00:05:52,030 --> 00:05:54,940
head, there is now the title, which is Angela,

106
00:05:55,180 --> 00:05:57,100
which is the title of the tab as well.

107
00:05:58,130 --> 00:06:03,130
Imagine if you had to type all of this HTML into this return as a string.

108
00:06:04,310 --> 00:06:05,750
It's pretty painful.

109
00:06:05,750 --> 00:06:09,770
It doesn't have any of the assistants that you get from your editor.

110
00:06:11,030 --> 00:06:15,140
Now here's a challenge for you. Back in days 41 and 42

111
00:06:15,500 --> 00:06:20,500
we learned about HTML and we created a CV website that looks something like

112
00:06:21,650 --> 00:06:26,120
this, which we managed to publish and upload to GitHub. Now,

113
00:06:26,120 --> 00:06:29,960
what I want you to do is to go and find your own CV website

114
00:06:30,320 --> 00:06:35,320
and then go to the link either on your GitHub page or find the original HTML

115
00:06:35,900 --> 00:06:39,110
file and I want you to go ahead and get hold of it.

116
00:06:39,560 --> 00:06:43,400
So if it's on GitHub, then you can go ahead and simply save as

117
00:06:43,760 --> 00:06:47,120
and save this webpage into your downloads.

118
00:06:48,440 --> 00:06:53,180
Now, if it saved as a HTML file somewhere in your system, that's also fine.

119
00:06:54,290 --> 00:06:57,650
But essentially what we want to do is we want to take this file,

120
00:06:57,650 --> 00:06:59,240
which is an HTML file,

121
00:07:01,070 --> 00:07:04,880
and we want to move it into our templates. Now,

122
00:07:04,880 --> 00:07:08,390
one of the things that you'll notice is if you downloaded this file off the

123
00:07:08,390 --> 00:07:09,223
internet,

124
00:07:09,230 --> 00:07:13,910
then you might have to rename it because firstly it's really long

125
00:07:13,970 --> 00:07:16,220
and we don't want to have to type that into our code.

126
00:07:16,490 --> 00:07:19,880
So I'm going to shorten the name to angela. And then at the very end,

127
00:07:19,910 --> 00:07:24,560
you can see the file extension at least when it comes off GitHub, is .htm.

128
00:07:24,740 --> 00:07:29,270
And the reason for this is because some servers don't accept four-lettered file

129
00:07:29,270 --> 00:07:33,710
extensions, but it's exactly the same as .html.

130
00:07:34,130 --> 00:07:38,720
So we're going to change it to .HTML and then we're going to re factor that.

131
00:07:39,320 --> 00:07:42,320
So now that we've got hold of this HTML page,

132
00:07:42,560 --> 00:07:46,670
we're going to try and render it instead of the index.html.

133
00:07:47,270 --> 00:07:50,900
Pause the video and see if you can complete this as a challenge.

134
00:07:53,230 --> 00:07:53,620
Right.

135
00:07:53,620 --> 00:07:55,720
All right. That's pretty simple.

136
00:07:55,750 --> 00:08:00,750
All we have to do is just replace the index.html to the new file

137
00:08:01,030 --> 00:08:02,680
which is angela.html.

138
00:08:03,100 --> 00:08:07,120
And if that file happened to be inside a folder for example,

139
00:08:07,330 --> 00:08:12,070
if we had a subfolder inside templates which we've called, I don't know cv,

140
00:08:12,430 --> 00:08:14,260
and we had this inside here,

141
00:08:14,740 --> 00:08:17,770
then we would have to specify that in the file path.

142
00:08:18,220 --> 00:08:22,180
If we just have it in the top level of our templates folder,

143
00:08:22,600 --> 00:08:26,320
then it's as simple as what we did with the index.html.

144
00:08:27,070 --> 00:08:30,670
So now, while our server is running in debug mode,

145
00:08:30,700 --> 00:08:35,700
we can go ahead and hit save on this website and it should restart our server.

146
00:08:36,970 --> 00:08:41,970
And now if we go back to our main homepage and reload the website,

147
00:08:42,789 --> 00:08:47,790
you can see it's now rendering our personal CV site with only one exception.

148
00:08:50,110 --> 00:08:54,550
What has happened to this profile picture? It looks pretty broken.

149
00:08:55,330 --> 00:08:58,240
Now in order to be able to render static images,

150
00:08:58,510 --> 00:09:01,510
we're going to have to learn how to render static files

151
00:09:01,600 --> 00:09:05,950
such as images like this. That's what we're going to do in the next lesson.


152
00:00:00,390 --> 00:00:05,390
As we saw previously when we rendered the HTML page of our CV,

153
00:00:06,360 --> 00:00:11,360
one of the components is an image tag and it has a image file that it needs to

154
00:00:11,910 --> 00:00:16,079
render. But it looks pretty broken when we rendered HTML.

155
00:00:17,040 --> 00:00:19,830
So if we go ahead and open up the Chrome developer tool

156
00:00:20,310 --> 00:00:24,180
which is under view, developer, and developer tools,

157
00:00:24,630 --> 00:00:26,190
then if we go to console

158
00:00:26,280 --> 00:00:30,690
you'll see that we actually get a bunch of 404 errors and they relate

159
00:00:30,690 --> 00:00:35,130
to the styles.css file as well as the angela.png file.

160
00:00:35,610 --> 00:00:37,710
That is what this is referring to.

161
00:00:39,570 --> 00:00:40,920
And you can actually see

162
00:00:40,920 --> 00:00:45,920
we get the same 404 errors when we look at the debug log in here as

163
00:00:46,200 --> 00:00:50,520
well. So we're missing some stuff basically. Well, firstly,

164
00:00:50,550 --> 00:00:51,990
let's see if we can recover it.

165
00:00:52,530 --> 00:00:56,460
We can go ahead and save this image from the website

166
00:00:56,790 --> 00:00:59,550
which I'll just call angela.png.

167
00:00:59,940 --> 00:01:03,960
And then we can drag this image into our personal site.

168
00:01:06,870 --> 00:01:09,930
And there it is right there. Now, in my case,

169
00:01:09,960 --> 00:01:12,600
my image actually happens to be a circular one

170
00:01:12,960 --> 00:01:15,210
which I edited in Photoshop,

171
00:01:15,270 --> 00:01:18,180
but you might just have a square one and it doesn't matter at all.

172
00:01:19,050 --> 00:01:22,380
Now that we've got our image inside our project,

173
00:01:22,650 --> 00:01:27,650
how do we make sure that that image actually gets rendered in our HTML site?

174
00:01:30,330 --> 00:01:35,330
Because here is the image tag and it's looking inside Angela's personal site

175
00:01:36,570 --> 00:01:41,460
files for angela.png, which is not what we have here.

176
00:01:42,030 --> 00:01:46,470
In fact, if we had moved this PNG file to the same

177
00:01:46,470 --> 00:01:51,120
folder so they're on the same hierarchy, basically inside the same folder,

178
00:01:51,630 --> 00:01:56,280
well then we could probably just change this to angela.png.

179
00:01:56,700 --> 00:02:01,700
If I go ahead and restart and rerun my server after I've added in all these

180
00:02:02,010 --> 00:02:06,150
files and I go to my personal site and I hit reload,

181
00:02:06,480 --> 00:02:10,979
you'll see that there's still no photo. So why is that? Well,

182
00:02:11,039 --> 00:02:13,050
back to the Flask documentation we go.

183
00:02:13,710 --> 00:02:17,940
The reason is because, just like our templates have to be inside a folder called

184
00:02:17,970 --> 00:02:21,840
templates, Flask will look for all your static files

185
00:02:21,840 --> 00:02:26,840
like your images or your CSS files inside a folder called static.

186
00:02:27,780 --> 00:02:31,410
So you have to put it inside a folder called static.

187
00:02:32,280 --> 00:02:36,450
They made the framework, they make the rules. So inside our project

188
00:02:36,480 --> 00:02:41,480
my-personal-site, let's create a new directory called static and let's move our

189
00:02:42,030 --> 00:02:44,610
image into that static folder.

190
00:02:46,170 --> 00:02:51,120
Now inside our angela.html, when we want to point to that image,

191
00:02:51,630 --> 00:02:56,630
then the path is going to be static/ the name of the file inside

192
00:02:57,870 --> 00:03:02,170
that folder, which in my case is angela.png. Now,

193
00:03:02,170 --> 00:03:05,440
if I go ahead and rerun my application,

194
00:03:05,800 --> 00:03:09,100
then go back to my homepage and refresh,

195
00:03:09,370 --> 00:03:12,160
you should see that image being rendered.

196
00:03:13,600 --> 00:03:18,010
It was able to look inside the static folder and find that image.

197
00:03:19,900 --> 00:03:23,470
Whenever you create a Flask application, 9 out of 10 times

198
00:03:23,500 --> 00:03:27,100
you'll need to create it with the templates folder and the static folder.

199
00:03:27,490 --> 00:03:31,570
And you put all your static files like your CSS files or your images or your

200
00:03:31,570 --> 00:03:33,700
videos inside that folder

201
00:03:33,970 --> 00:03:37,030
and your file path is relative to that folder.

202
00:03:37,750 --> 00:03:40,000
And then when you create your HTML templates,

203
00:03:40,030 --> 00:03:42,400
you're going to put it inside the templates folder.

204
00:03:43,420 --> 00:03:45,640
Now going back to my project,

205
00:03:46,000 --> 00:03:49,960
I'm going to delete all the extra files that we created just now in the demo.

206
00:03:50,550 --> 00:03:51,383
Right.

207
00:03:55,770 --> 00:03:59,880
And I should now only end up with my index.html

208
00:04:00,120 --> 00:04:03,270
which is our simple website. Now,

209
00:04:03,300 --> 00:04:07,170
the reason why I wanna keep it simple is just so that you really understand

210
00:04:07,170 --> 00:04:08,850
everything from the ground up.

211
00:04:09,450 --> 00:04:14,450
And the challenge I've got for you is to go ahead and create a CSS style sheet,

212
00:04:16,529 --> 00:04:18,510
and then using the style sheet

213
00:04:18,839 --> 00:04:23,840
change the background of the body of this index.html website to purple.

214
00:04:26,190 --> 00:04:29,850
That's the goal. You are going to have to change the server.py,

215
00:04:30,330 --> 00:04:33,150
you're going to have to change the index.html,

216
00:04:33,540 --> 00:04:35,850
and you're going to have to create a CSS file.

217
00:04:36,480 --> 00:04:39,570
Pause the video and see if you can complete this challenge.

218
00:04:40,020 --> 00:04:40,853
Right.

219
00:04:43,680 --> 00:04:47,820
All right. The first thing we're going to do is create a CSS file.

220
00:04:48,330 --> 00:04:50,880
That is going to be a static file.

221
00:04:51,390 --> 00:04:53,670
We're going to create it inside the static folder.

222
00:04:54,360 --> 00:04:57,750
So I'm going to call it styles.css

223
00:04:59,580 --> 00:05:04,580
and now I'm going to go ahead and target the body of my website to the body tag,

224
00:05:07,680 --> 00:05:12,120
and then I'm going to change the background color to purple

225
00:05:13,770 --> 00:05:14,490
like this.

226
00:05:14,490 --> 00:05:19,490
So very simple CSS code here. Now that when it's run is going to target this body

227
00:05:22,140 --> 00:05:24,720
tag which is basically the body of our website

228
00:05:24,810 --> 00:05:28,560
and hopefully it's going to turn the background purple. Now,

229
00:05:28,620 --> 00:05:30,630
in order for that CSS to work though,

230
00:05:30,690 --> 00:05:35,340
we're going to have to add it into the head of our HTML file just as we've done

231
00:05:35,340 --> 00:05:39,660
it thousands of times before when we did the lessons on CSS and HTML.

232
00:05:40,620 --> 00:05:43,710
In order to add that in, we're going to create a link element

233
00:05:44,160 --> 00:05:47,670
which is going to have a relationship. Now,

234
00:05:47,700 --> 00:05:50,820
the relationship is going to be a style sheet.

235
00:05:50,970 --> 00:05:55,530
So it's basically telling the HTML file that this link points to a style sheet.

236
00:05:55,980 --> 00:06:00,980
And then the href of the style sheet is going to be inside static/

237
00:06:01,370 --> 00:06:03,170
styles.css.

238
00:06:04,190 --> 00:06:09,170
Now let's go ahead and save both of these files and go back to our server and

239
00:06:09,170 --> 00:06:14,120
make sure that we're rendering that HTML template which is index.html.

240
00:06:14,930 --> 00:06:19,930
And now if we go ahead and stop and restart this project so that it takes into

241
00:06:21,080 --> 00:06:25,190
account all the new files, and then we go to our homepage,

242
00:06:25,430 --> 00:06:29,630
hopefully it should show you a page that has a purple background

243
00:06:29,990 --> 00:06:32,420
like you see here. Now,

244
00:06:32,420 --> 00:06:37,280
one of the things you have to be careful about Chrome is that it likes to cache

245
00:06:37,580 --> 00:06:40,190
your static files. So what does this mean? Well,

246
00:06:40,640 --> 00:06:44,420
let's go back to the styles.css and I'm going to change that background-color

247
00:06:44,420 --> 00:06:47,870
to red. Now I'm going to hit save on this file.

248
00:06:48,140 --> 00:06:51,290
I'm even going to stop and rerun my file,

249
00:06:51,620 --> 00:06:55,130
but you can see if I refresh this page, it's still purple.

250
00:06:55,760 --> 00:07:00,760
And if I go into the Chrome developer tools and we take a look at our elements,

251
00:07:02,510 --> 00:07:07,310
you can see that the body still has CSS saying that the background color should

252
00:07:07,310 --> 00:07:11,660
be purple. If we go to the sources inside the static folder,

253
00:07:11,720 --> 00:07:14,290
there's our styles.css. And you can see

254
00:07:14,300 --> 00:07:18,500
this is an older version of our style sheet. So what's going on?

255
00:07:18,590 --> 00:07:22,970
Is it because we didn't save this change? No, we definitely saved it.

256
00:07:23,570 --> 00:07:28,400
What's actually happening is that to save your internet usage,

257
00:07:28,700 --> 00:07:33,700
Chrome likes to cache the style sheets and other static files,

258
00:07:34,310 --> 00:07:35,960
so images or JavaScript.

259
00:07:36,530 --> 00:07:39,770
and the reason why it does that is because when you visit a website,

260
00:07:40,130 --> 00:07:41,990
if you're visiting it on the same day,

261
00:07:42,290 --> 00:07:45,200
these static files are unlikely to change.

262
00:07:45,530 --> 00:07:50,530
A website is unlikely to update their CSS or their images over one day.

263
00:07:51,470 --> 00:07:54,380
So once the browser downloads it,

264
00:07:54,620 --> 00:07:56,990
it keeps hold of those static files.

265
00:07:57,350 --> 00:08:01,910
This just means that you don't have to keep downloading these large files every

266
00:08:01,910 --> 00:08:04,340
single time you hit up the same website.

267
00:08:05,090 --> 00:08:10,090
That's kind of good if we are in fact visiting a real live website.

268
00:08:11,120 --> 00:08:14,330
But when we're testing, it's a little bit confusing.

269
00:08:14,900 --> 00:08:19,610
So one of the things you have to do is you have to get Chrome to hard reload.

270
00:08:20,330 --> 00:08:25,330
And you can do that by holding down the shift key and clicking on this refresh

271
00:08:25,850 --> 00:08:29,450
button, which is going to do a hard reload.

272
00:08:29,660 --> 00:08:34,220
And it's going to get rid of all the cached files and pull in any new files.

273
00:08:34,970 --> 00:08:39,970
So now the background changes to red. And we can confirm that by... let's change

274
00:08:40,309 --> 00:08:44,930
this to blue hit save on that file, holding down shift, reload,

275
00:08:45,050 --> 00:08:47,450
and we get the blue background updating.

276
00:08:48,590 --> 00:08:52,640
So that's just something to be careful about when you find that your CSS files

277
00:08:52,640 --> 00:08:56,300
or your other static files are not being changed or not being rendered.


278
00:00:00,420 --> 00:00:00,990
All right guys,

279
00:00:00,990 --> 00:00:04,890
it's time for another challenge to review what we learned in the last lesson.

280
00:00:05,520 --> 00:00:10,520
Back when we learned CSS on days 43 and 44, the end project that we created

281
00:00:12,060 --> 00:00:15,990
was a personal site that looks something like this.

282
00:00:15,990 --> 00:00:19,890
It's beautifully designed with CSS styling,

283
00:00:20,220 --> 00:00:24,480
images, gifs, and a whole lot more. Now,

284
00:00:24,480 --> 00:00:29,480
what I want you to do is to take your version of this personal site and get it

285
00:00:29,940 --> 00:00:33,930
to run with your Python server. And in the process,

286
00:00:33,960 --> 00:00:37,170
you'll review what you learned about rendering HTML files

287
00:00:37,560 --> 00:00:39,510
as well as serving up static files.

288
00:00:40,470 --> 00:00:43,860
Hopefully, you've got all your files lying around somewhere in your computer.

289
00:00:44,340 --> 00:00:45,240
If you don't,

290
00:00:45,330 --> 00:00:50,010
you can go ahead and head over to the course resources where I've included a

291
00:00:50,010 --> 00:00:53,940
link to download all of these files as a zip file.

292
00:00:54,810 --> 00:00:57,630
Once you have unzipped that zip file,

293
00:00:57,660 --> 00:01:01,020
you should end up with a folder that looks like this.

294
00:01:01,050 --> 00:01:05,880
We've got our favicon, our CSS folder with our styles.css,

295
00:01:06,270 --> 00:01:09,000
our image folder with all four images,

296
00:01:09,420 --> 00:01:14,420
and you want to move these files to their respective places inside the personal

297
00:01:14,520 --> 00:01:15,353
site.

298
00:01:15,360 --> 00:01:20,360
Feel free to go ahead and delete the index.html and the styles.css

299
00:01:20,850 --> 00:01:25,850
and see if you're able to use the files that you've got here to render it using

300
00:01:27,360 --> 00:01:30,960
your Python server. Pause the video and give that a go.

301
00:01:31,130 --> 00:01:31,963
All right.

302
00:01:35,510 --> 00:01:35,780
All right.

303
00:01:35,780 --> 00:01:40,760
So the first thing we need to do is to move the files in here to their respective

304
00:01:40,790 --> 00:01:45,470
places. The index.html is going to go inside the templates folder,

305
00:01:46,040 --> 00:01:49,730
but pretty much everything else is going to go inside the static folder.

306
00:01:49,970 --> 00:01:54,230
So that includes the CSS, the favicon, as well as the images folder.

307
00:01:57,650 --> 00:01:59,810
Now that we've moved everything in here,

308
00:02:00,500 --> 00:02:04,100
there's actually nothing we need to do inside our server.py

309
00:02:04,130 --> 00:02:08,449
because it's still trying to render a webpage called index.html,

310
00:02:08,780 --> 00:02:13,370
which in our case, it's still called index.html. Now,

311
00:02:13,430 --> 00:02:17,840
the thing that we do have to change though is inside our index.html

312
00:02:18,140 --> 00:02:22,460
it's pointing straight towards css/styles.css,

313
00:02:22,820 --> 00:02:26,600
and also for the favicon, it's pointing straight to the favicon file.

314
00:02:26,960 --> 00:02:31,280
What we need to do is to take into account that it's now living inside a folder

315
00:02:31,340 --> 00:02:32,390
called static.

316
00:02:33,590 --> 00:02:38,060
So we're going to have to add the full file path to anywhere where we have a

317
00:02:38,120 --> 00:02:40,850
local static file being used.

318
00:02:41,150 --> 00:02:43,340
So that includes the CSS,

319
00:02:43,400 --> 00:02:48,400
that includes the favicon, also any of the images that we're using in here.

320
00:02:49,190 --> 00:02:51,860
And if you want for sort of convenience sake,

321
00:02:51,890 --> 00:02:54,680
you can actually just copy this part

322
00:02:54,710 --> 00:02:58,340
which is the source of the images and then you can hold down

323
00:02:58,400 --> 00:03:03,400
Command+ R on Mac or Control + R on Windows to bring up the find and replace.

324
00:03:05,650 --> 00:03:10,650
And we're gonna replace this with static/images/. So we're basically

325
00:03:13,090 --> 00:03:18,090
adding static to this images/. And if we go ahead and replace it in all five

326
00:03:19,750 --> 00:03:24,370
places, then we should now be done with all of our refactorings.

327
00:03:25,930 --> 00:03:30,930
Now let's go ahead and restart our file so that it looks at all of these new

328
00:03:32,740 --> 00:03:36,370
image, and let's go to our website

329
00:03:36,400 --> 00:03:38,500
which is being served up by Python

330
00:03:38,890 --> 00:03:42,160
and hopefully you have the same result as I do

331
00:03:42,610 --> 00:03:44,950
which is the same personal site,

332
00:03:45,340 --> 00:03:48,760
but now served up with our Python server.

333
00:03:50,440 --> 00:03:54,040
Now this process has been pretty pain-free

334
00:03:54,040 --> 00:03:58,330
I would say. We simply moved in the required index.html,

335
00:03:58,330 --> 00:04:01,120
the CSS images and the favicons,

336
00:04:01,180 --> 00:04:04,180
so all the files that make up a particular website.

337
00:04:04,630 --> 00:04:08,890
And we simply added it to our Flask project.

338
00:04:09,730 --> 00:04:10,300
Now,

339
00:04:10,300 --> 00:04:15,300
what you can also do is you can get templates of HTML and CSS files from the

340
00:04:16,600 --> 00:04:20,050
internet. For example, a website like html

341
00:04:20,050 --> 00:04:21,700
5up.net,

342
00:04:22,089 --> 00:04:26,800
where they have beautiful free templates that you can tap into.

343
00:04:27,640 --> 00:04:30,370
Now consider if you were creating your own personal site,

344
00:04:30,490 --> 00:04:34,780
then you can pick from all of these beautiful HTML templates

345
00:04:35,080 --> 00:04:40,000
which you can then update and personalize. For example,

346
00:04:40,030 --> 00:04:44,200
if we take this first one, we can go ahead and see it as a live demo.

347
00:04:44,530 --> 00:04:49,120
So we can see this website as it is, and we can see how cool it looks.

348
00:04:49,420 --> 00:04:54,130
It's got buttons, it's got JavaScript, it's got beautiful CSS styling,

349
00:04:54,460 --> 00:04:58,870
and this might be a really good website for say, keeping track of our portfolio,

350
00:04:58,900 --> 00:05:02,560
like the website's that we're building; to have images of the websites,

351
00:05:02,650 --> 00:05:05,500
a link to the website, some brief description.

352
00:05:05,770 --> 00:05:09,670
And then we could just put this up online and whenever we want to get hired as a

353
00:05:09,670 --> 00:05:12,250
web developer, we could point people towards it.

354
00:05:13,000 --> 00:05:16,900
So how do we make this work with Python? Well,

355
00:05:16,900 --> 00:05:19,870
the first thing we have to do is simply hit download,

356
00:05:20,410 --> 00:05:24,460
and it's going to download all of the files that make up this website.

357
00:05:25,180 --> 00:05:28,240
Now remember that because we're getting it for free,

358
00:05:28,480 --> 00:05:32,800
we need to attribute the designer who created this website.

359
00:05:33,310 --> 00:05:37,000
If you don't want to attribute it and you want to use it for commercial use,

360
00:05:37,390 --> 00:05:42,390
then you can pay just $19 and access all of their templates as well as support

361
00:05:43,210 --> 00:05:47,950
from the creator. Now compare that to a service like Squarespace

362
00:05:48,400 --> 00:05:52,690
where you're basically getting the same service templates for your website.

363
00:05:53,080 --> 00:05:54,160
But in this case,

364
00:05:54,340 --> 00:05:58,100
you're going to be paying anywhere between $10 to $30 per month

365
00:05:58,190 --> 00:06:02,480
which is a lot more expensive, but it's great if you don't know web development.

366
00:06:02,870 --> 00:06:05,000
But we're not going to be in that camp anymore.

367
00:06:06,110 --> 00:06:09,410
Let's go ahead and unzip that file that we just downloaded,

368
00:06:09,860 --> 00:06:11,600
which was called paradigm shift.

369
00:06:11,990 --> 00:06:16,990
And we're going to try and transfer these files to our website over here.

370
00:06:18,140 --> 00:06:18,890
So again,

371
00:06:18,890 --> 00:06:22,760
I'm going to go ahead and delete all of the previous files that's inside my

372
00:06:22,760 --> 00:06:24,830
static and templates folders,

373
00:06:24,880 --> 00:06:25,713
...

374
00:06:28,480 --> 00:06:33,130
and I'm going to try and move the relevant parts of this new website over.

375
00:06:33,880 --> 00:06:36,760
So here, they've got an index.html,

376
00:06:36,850 --> 00:06:39,280
a read me text and a license text.

377
00:06:39,730 --> 00:06:43,930
So all we need is to move our index.html to the templates

378
00:06:45,670 --> 00:06:49,600
and the images and assets over to the static folder.

379
00:06:50,200 --> 00:06:51,033
Right.

380
00:06:52,360 --> 00:06:55,330
Now, one of the things to note is when you're looking at the demo,

381
00:06:55,330 --> 00:06:57,100
there's all of these beautiful pictures,

382
00:06:57,430 --> 00:07:01,660
but of course the designer doesn't have the rights to these pictures to

383
00:07:01,660 --> 00:07:06,430
distribute. So you'll notice that all the images inside the images folder

384
00:07:06,700 --> 00:07:08,620
are these sort of gradients.

385
00:07:08,770 --> 00:07:11,920
So don't be worried if when you run your website,

386
00:07:11,950 --> 00:07:15,610
you just see a bunch of blurry gradients. It's not a problem.

387
00:07:16,930 --> 00:07:21,580
Now what we want to do is we want to see if we can get this index.html to

388
00:07:21,580 --> 00:07:25,270
work when it's being served up by our server. Now,

389
00:07:25,300 --> 00:07:29,410
the first thing we can do is simply just restart our project,

390
00:07:29,440 --> 00:07:31,900
rerun it and see what it looks like.

391
00:07:32,350 --> 00:07:37,350
So let's refresh this static page and you can see it's got all of the HTML,

392
00:07:38,020 --> 00:07:40,210
but no styling and no images.

393
00:07:40,660 --> 00:07:45,660
So that is probably because we're not specifying the static folder in the path.

394
00:07:47,290 --> 00:07:49,360
So here we've got our assets,

395
00:07:51,070 --> 00:07:55,570
and here we've got an image, but they're both inside the static folder.

396
00:07:56,260 --> 00:08:00,700
So we can do that quick trick with find and replace.

397
00:08:01,210 --> 00:08:04,210
So for anything that's inside the images folder,

398
00:08:04,240 --> 00:08:09,100
we're going to replace it with static/images and for anything that's

399
00:08:09,100 --> 00:08:10,750
inside the assets folder,

400
00:08:11,050 --> 00:08:14,230
we're going to replace it with static/assets.

401
00:08:14,950 --> 00:08:15,783
Right?

402
00:08:17,140 --> 00:08:21,370
And now if we go ahead and hit save and refresh this page,

403
00:08:21,700 --> 00:08:25,750
you can see it's now rendering the images as these sort of gradients

404
00:08:26,170 --> 00:08:30,910
and it also rendering the styling and CSS. Now,

405
00:08:30,940 --> 00:08:34,059
how would you edit this? Well, the easiest way is of course,

406
00:08:34,090 --> 00:08:36,820
to actually just edit this raw HTML.

407
00:08:37,299 --> 00:08:42,250
So you can take any of this HTML and you already understand what most of it

408
00:08:42,280 --> 00:08:46,480
does. You've got tables, you've got headings, you got h1s,

409
00:08:46,750 --> 00:08:48,190
all sorts of tags in here.

410
00:08:49,930 --> 00:08:53,650
And you can edit it just like that. For example,

411
00:08:53,650 --> 00:08:55,890
if we scroll up to very top,

412
00:08:56,130 --> 00:09:00,900
we can change the title to a name for example,

413
00:09:00,900 --> 00:09:05,580
Angela's portfolio. And we can change the h1 

414
00:09:05,610 --> 00:09:10,050
which says paradigm shift to our own name for example.

415
00:09:10,560 --> 00:09:13,410
And now when I hit save and I refresh over here,

416
00:09:13,710 --> 00:09:15,840
you can see all of that being reflected.

417
00:09:16,560 --> 00:09:20,670
Now there's an even better way of editing HTML in Chrome.

418
00:09:21,330 --> 00:09:23,520
All thanks to the Chrome developer tools.

419
00:09:24,000 --> 00:09:27,120
If we open up the Chrome developer tools and go to the console,

420
00:09:27,180 --> 00:09:32,180
we can actually type a little bit of JavaScript to make anything on our webpage

421
00:09:32,400 --> 00:09:37,050
editable. So to write this, we tap into the document

422
00:09:37,080 --> 00:09:41,490
which is this entire HTML document, and then we tap into the body

423
00:09:41,790 --> 00:09:45,690
which has everything inside the body tag, which is the content of the website.

424
00:09:46,230 --> 00:09:51,230
And then we can call on a property called contentEditable,

425
00:09:52,830 --> 00:09:57,300
and we can set that to true. Now note here that in JavaScript,

426
00:09:57,630 --> 00:10:02,630
the true booelan is spelled out with a lower t, not capital T like in Python.

427
00:10:04,320 --> 00:10:06,480
But the rest of it is pretty standard code

428
00:10:06,510 --> 00:10:11,340
and we can all understand that. Now once I hit enter and that goes through,

429
00:10:11,700 --> 00:10:14,640
I can close down this pane and now watch this.

430
00:10:15,210 --> 00:10:17,820
I can now edit anything that's on this website.

431
00:10:18,380 --> 00:10:19,213
Cool.

432
00:10:21,590 --> 00:10:26,590
All of these paragraphs or any bits of text is now completely editable.

433
00:10:27,890 --> 00:10:30,530
Now, what if you want to delete some of these elements,

434
00:10:30,560 --> 00:10:33,440
what would be the easiest way to do that? Well,

435
00:10:33,440 --> 00:10:36,860
you can simply open up the Chrome developer tools,

436
00:10:37,340 --> 00:10:41,960
and then we can use this little button here to select any element.

437
00:10:42,380 --> 00:10:46,160
So maybe we want to get rid of this paragraph here, select it,

438
00:10:46,520 --> 00:10:51,520
it locates it in the HTML and I can just hit backspace. So I can select any part

439
00:10:53,270 --> 00:10:56,450
of the HTML elements that I don't like for example,

440
00:10:56,450 --> 00:11:00,020
if I want to get rid of this whole section well I would select it and then

441
00:11:00,020 --> 00:11:00,853
delete it.

442
00:11:01,130 --> 00:11:05,180
Maybe I could delete some more sections and make this a lot simpler.

443
00:11:05,420 --> 00:11:08,780
Now you can see this website just has two sections,

444
00:11:08,810 --> 00:11:10,550
my name and my contact details.

445
00:11:12,560 --> 00:11:14,210
One of the unfortunate things though,

446
00:11:14,300 --> 00:11:18,440
is that all of the changes that you're making here, even though you can see it

447
00:11:18,440 --> 00:11:21,290
and it's great, as soon as you hit refresh,

448
00:11:21,740 --> 00:11:23,840
all of those changes will disappear.

449
00:11:24,350 --> 00:11:26,810
And the reason is because when you hit refresh,

450
00:11:27,110 --> 00:11:31,790
what's happening is your browser is going to your server at this address and

451
00:11:31,790 --> 00:11:34,940
requesting all of the HTML and CSS files,

452
00:11:35,480 --> 00:11:37,760
which of course comes from over here.

453
00:11:38,330 --> 00:11:41,810
So this is unchanged by what we've done just now,

454
00:11:41,900 --> 00:11:44,540
it's completely not changed at all.

455
00:11:45,020 --> 00:11:48,380
So if you want all of these changes that you've made in the HTML,

456
00:11:48,470 --> 00:11:53,470
then what you have to do is actually save this webpage as it is.

457
00:11:54,670 --> 00:11:58,480
And then you can move this HTML into your templates

458
00:11:58,930 --> 00:12:03,930
and you can see that this is now a lot shorter with all of the changes that we

459
00:12:04,900 --> 00:12:06,280
made previously.

460
00:12:06,880 --> 00:12:10,720
And you can replace this with what's inside your index.html.

461
00:12:11,530 --> 00:12:16,530
This is probably one of the easiest ways of modifying a prebuilt template.

462
00:12:18,910 --> 00:12:23,320
And you can see that there's plenty of templates for you to play around with.

463
00:12:23,890 --> 00:12:28,270
In fact, in the next lesson, when we're creating our final project,

464
00:12:28,690 --> 00:12:33,310
you're going to be editing this identity template completely from scratch.

465
00:12:33,820 --> 00:12:36,940
And you are going to be creating a digital name card.

466
00:12:37,660 --> 00:12:39,070
So have a play around.

467
00:12:39,580 --> 00:12:42,940
And once you're done, head over to the next lesson and complete the final

468
00:12:42,940 --> 00:12:43,510
project.


469
00:00:00,450 --> 00:00:02,969
All right, so let's go ahead and run through the solution.

470
00:00:03,270 --> 00:00:05,939
The first thing I'm going to do is to head over

471
00:00:05,939 --> 00:00:08,310
to the website and download the template.

472
00:00:09,270 --> 00:00:11,040
Once I've downloaded the template,

473
00:00:11,070 --> 00:00:16,070
I'm going to unzip the file and get access to all the files inside.

474
00:00:17,490 --> 00:00:20,370
Now I've already set up my Flask server

475
00:00:20,400 --> 00:00:23,760
which is pretty simple by now. I've created my app,

476
00:00:24,090 --> 00:00:29,090
I've set up the home routes and I've set my app to run on debug mode.

477
00:00:30,270 --> 00:00:34,230
Now I have to create the necessary directories.

478
00:00:34,260 --> 00:00:37,020
So I'm going to need a directory called templates,

479
00:00:37,560 --> 00:00:41,100
and I'm also going to need one called static.

480
00:00:42,750 --> 00:00:44,880
With those two folders in place

481
00:00:44,880 --> 00:00:49,880
I can now start moving over the relevant parts of these files; index.html

482
00:00:51,390 --> 00:00:55,080
goes into templates, assets

483
00:00:55,170 --> 00:00:57,150
and images go into static.

484
00:00:59,510 --> 00:01:00,343
Right

485
00:01:00,470 --> 00:01:00,740
Now,

486
00:01:00,740 --> 00:01:05,740
one of the first things we're going to try and do is just to see if this works.

487
00:01:06,290 --> 00:01:11,090
So we're gonna start up our server and try to render that index.html.

488
00:01:12,080 --> 00:01:15,530
And if you've got another project running in the background

489
00:01:15,530 --> 00:01:18,230
which is using our server address,

490
00:01:18,470 --> 00:01:21,740
then you are going to get an error that says address already in use.

491
00:01:21,980 --> 00:01:26,210
So just make sure you stop any other files from running and then run this again.

492
00:01:28,250 --> 00:01:32,540
So here's our webpage with just the HTML. It's very,

493
00:01:32,540 --> 00:01:36,290
very simple, and it doesn't have any of the styling or the images.

494
00:01:36,710 --> 00:01:41,240
So we're going to have to fix that by going into the index.html and figuring

495
00:01:41,240 --> 00:01:44,300
out which parts of it need to be changed.

496
00:01:44,900 --> 00:01:48,860
Now notice that in the download, we got two folders;

497
00:01:48,950 --> 00:01:52,370
assets and images which are now both inside static.

498
00:01:52,700 --> 00:01:57,700
So we're going to have to find and replace anything that is assets and change

499
00:02:00,170 --> 00:02:03,350
that to static/assets,

500
00:02:03,770 --> 00:02:04,603
...

501
00:02:06,560 --> 00:02:09,169
and also do the same with images,

502
00:02:14,510 --> 00:02:14,870
right?

503
00:02:14,870 --> 00:02:17,300
There's actually not a lot of code in here.

504
00:02:17,330 --> 00:02:21,080
You can pretty much scroll from the top to the bottom and you can see there's

505
00:02:21,080 --> 00:02:23,090
not a lot of stuff here.

506
00:02:23,750 --> 00:02:26,660
So now that we've fixed those paths,

507
00:02:26,720 --> 00:02:30,920
let's see if we can hit save and go back to refresh our website.

508
00:02:31,880 --> 00:02:34,310
Now, if you are getting what I'm seeing here

509
00:02:34,310 --> 00:02:39,310
which is the CSS file being rendered from the previous project where we got hold

510
00:02:40,640 --> 00:02:45,640
of the portfolio site, that remember is because the CSS file is a static file and

511
00:02:46,730 --> 00:02:50,660
it's being cached by the Chrome browser. So as I mentioned before,

512
00:02:50,660 --> 00:02:55,660
you have to hold down shift and hit refresh in order to get the new static files

513
00:02:56,090 --> 00:03:00,040
to come over. So now that we've got all of this,

514
00:03:00,160 --> 00:03:05,160
it's time to actually edit the text and the links. Going into here,

515
00:03:05,890 --> 00:03:10,360
we can see that here is the h1 which we can change quite easily,

516
00:03:10,410 --> 00:03:11,243
...

517
00:03:13,440 --> 00:03:18,210
and you can of course add your hrefs to these links for Twitter,

518
00:03:18,210 --> 00:03:19,650
Instagram, Facebook,

519
00:03:20,190 --> 00:03:25,190
copy your Twitter URL and change the Href here to that

520
00:03:26,670 --> 00:03:27,503
if you wish.

521
00:03:28,350 --> 00:03:32,010
And you can change the footer as well. Now,

522
00:03:32,040 --> 00:03:36,360
remember because we didn't buy these templates and we're using it for personal

523
00:03:36,360 --> 00:03:40,560
use, we should really attribute the source where we got it from.

524
00:03:40,590 --> 00:03:45,570
So I'll just leave that as it is. Now, if I hit save,

525
00:03:45,600 --> 00:03:49,710
you can see I've pretty much updated all the text to what I want.

526
00:03:50,670 --> 00:03:53,760
And you can see that this avatar image has disappeared

527
00:03:54,210 --> 00:03:57,660
and the reason is because when I was doing the finding and replacing,

528
00:03:57,960 --> 00:03:59,520
I wasn't careful enough

529
00:03:59,550 --> 00:04:02,970
and I didn't add in the final trailing slash

530
00:04:03,240 --> 00:04:06,960
which should in fact be right here.

531
00:04:07,980 --> 00:04:12,390
So this is going to now render the avatar image.

532
00:04:12,600 --> 00:04:14,070
But of course at the moment,

533
00:04:14,070 --> 00:04:18,390
it's just this blank gradient image inside the images folder.

534
00:04:19,019 --> 00:04:23,610
So what we can do is we can simply replace it with our own image.

535
00:04:25,290 --> 00:04:29,490
So, here in my downloads folder, I've got an image called angela.png.

536
00:04:29,970 --> 00:04:34,970
So I'm going to move my own image into the images folder and refactor that.

537
00:04:36,120 --> 00:04:38,610
And then back in our index.html,

538
00:04:38,670 --> 00:04:43,410
I'm going to point towards that image by changing this file path.

539
00:04:43,860 --> 00:04:47,070
So now I can go ahead and delete this avatar image.

540
00:04:47,640 --> 00:04:51,120
And if I hit save and go back to my website,

541
00:04:51,420 --> 00:04:55,320
you can see my photo now shows up inside the image.

542
00:04:56,670 --> 00:05:01,110
The next thing I want to add is a background image under this gradient here.

543
00:05:01,590 --> 00:05:06,590
So one of the best places to find great images for commercial use is a website

544
00:05:07,530 --> 00:05:08,760
called Unsplash.

545
00:05:09,150 --> 00:05:13,860
So if we look for some sort of image that we could put as the background,

546
00:05:14,250 --> 00:05:17,280
maybe a beach or a sea,

547
00:05:18,360 --> 00:05:22,290
you can see there's thousands of images that you can choose from.

548
00:05:22,560 --> 00:05:26,700
And they all look incredibly beautiful, and they're all large, all HD.

549
00:05:27,630 --> 00:05:30,870
I've decided to go with this picture of the seashore.

550
00:05:31,020 --> 00:05:33,390
And if I go ahead and click on download free,

551
00:05:33,720 --> 00:05:38,460
it should download the large JPEG image onto my computer.

552
00:05:39,090 --> 00:05:43,920
So now I'm going to go ahead and rename that image to

553
00:05:44,010 --> 00:05:46,950
the same name as the original background image

554
00:05:46,980 --> 00:05:49,290
which is just a bg.jpeg.

555
00:05:50,130 --> 00:05:50,963
Right.

556
00:05:52,740 --> 00:05:53,573
Like that.

557
00:05:53,730 --> 00:05:58,730
And now I can delete this file and replace it with my own background.

558
00:05:59,870 --> 00:06:04,870
So remember that the background image here it is actually being rendered from

559
00:06:04,880 --> 00:06:06,080
the CSS files.

560
00:06:06,380 --> 00:06:10,640
And if you look inside the main.css you can see here where it sets the

561
00:06:10,640 --> 00:06:11,690
background image,

562
00:06:12,020 --> 00:06:17,020
it's actually generating a gradient and it's overlaying that on top of something

563
00:06:18,080 --> 00:06:21,260
inside the images folder called bg.jpeg.

564
00:06:21,530 --> 00:06:23,930
So instead of changing it all over here,

565
00:06:24,230 --> 00:06:29,230
all we just did is just name our image the same as what they had before.

566
00:06:29,870 --> 00:06:33,290
Now, if we go ahead and rerun our website,

567
00:06:33,980 --> 00:06:37,730
go back to our website and hard reload,

568
00:06:37,730 --> 00:06:41,300
remember by holding down shift and clicking on the reload button,

569
00:06:41,660 --> 00:06:45,770
you can see that image has now been brought in behind this gradient.

570
00:06:46,820 --> 00:06:51,820
Now the last step is to change that title so that it says our name instead of a

571
00:06:53,750 --> 00:06:57,200
placeholder text. So let's go ahead and change the title

572
00:07:01,450 --> 00:07:02,110
...

573
00:07:02,110 --> 00:07:04,960
to our name and there we have it.

574
00:07:05,410 --> 00:07:07,960
We're now serving up this beautiful website

575
00:07:08,140 --> 00:07:12,880
which we got completely from a template that somebody else's developed.

576
00:07:13,300 --> 00:07:17,770
And all we needed to do was to have enough understanding of HTML,

577
00:07:17,770 --> 00:07:22,770
CSS and how Python servers work in order to customize it for our own purposes.

578
00:07:24,340 --> 00:07:25,990
I hope you enjoyed building this with me

579
00:07:26,080 --> 00:07:29,950
and I hope you'll look through some of the other templates and start messing

580
00:07:29,950 --> 00:07:33,910
around with some of them to create your own custom websites.


